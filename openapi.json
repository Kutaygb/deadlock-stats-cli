{"openapi":"3.1.0","info":{"title":"Deadlock API","description":"\n## Support the Deadlock API\n\nWhether you're building your own database, developing data science projects, or enhancing your website with game and player analytics, the Deadlock API has the data you need.\n\nYour sponsorship helps keep this resource open, free and future-proof for everyone. By supporting the Deadlock API, you will enable continued development, new features and reliable access for developers, analysts and streamers worldwide.\n\nHelp us continue to provide the data you need - sponsor the Deadlock API today!\n\n**-> You can Sponsor the Deadlock API on [Patreon](https://www.patreon.com/c/user?u=68961896) or [GitHub](https://github.com/sponsors/raimannma)**\n\n## Disclaimer\n_deadlock-api.com is not endorsed by Valve and does not reflect the views or opinions of Valve or anyone officially involved in producing or managing Valve properties. Valve and all associated properties are trademarks or registered trademarks of Valve Corporation_\n        ","contact":{"name":"Deadlock API - Discord","url":"https://discord.gg/XMF9Xrgfqu"},"license":{"name":"MIT","url":"https://github.com/deadlock-api/deadlock-api-rust/blob/master/LICENSE"},"version":"0.1.0"},"servers":[{"url":"https://api.deadlock-api.com"}],"paths":{"/v1/analytics/ability-order-stats":{"get":{"tags":["Analytics"],"summary":"Ability Order Stats","description":"\nRetrieves statistics for the ability order of a hero.\n\n### Rate Limits:\n| Type | Limit |\n| ---- | ----- |\n| IP | 100req/s |\n| Key | - |\n| Global | - |\n    ","operationId":"ability_order_stats","parameters":[{"name":"hero_id","in":"query","description":"See more: <https://assets.deadlock-api.com/v2/heroes>","required":true,"schema":{"type":"integer","format":"int32","minimum":0}},{"name":"min_unix_timestamp","in":"query","description":"Filter matches based on their start time (Unix timestamp). **Default:** 30 days ago.","required":false,"schema":{"type":["integer","null"],"format":"int64","default":1754784000}},{"name":"max_unix_timestamp","in":"query","description":"Filter matches based on their start time (Unix timestamp).","required":false,"schema":{"type":["integer","null"],"format":"int64"}},{"name":"min_duration_s","in":"query","description":"Filter matches based on their duration in seconds (up to 7000s).","required":false,"schema":{"type":["integer","null"],"format":"int64","maximum":7000,"minimum":0}},{"name":"max_duration_s","in":"query","description":"Filter matches based on their duration in seconds (up to 7000s).","required":false,"schema":{"type":["integer","null"],"format":"int64","maximum":7000,"minimum":0}},{"name":"min_ability_upgrades","in":"query","description":"Filter players based on their minimum number of ability upgrades over the whole match.","required":false,"schema":{"type":["integer","null"],"format":"int64","maximum":16,"minimum":0}},{"name":"max_ability_upgrades","in":"query","description":"Filter players based on their maximum number of ability upgrades over the whole match.","required":false,"schema":{"type":["integer","null"],"format":"int64","maximum":16,"minimum":1}},{"name":"min_networth","in":"query","description":"Filter players based on their net worth.","required":false,"schema":{"type":["integer","null"],"format":"int64","minimum":0}},{"name":"max_networth","in":"query","description":"Filter players based on their net worth.","required":false,"schema":{"type":["integer","null"],"format":"int64","minimum":0}},{"name":"min_average_badge","in":"query","description":"Filter matches based on the average badge level (0-116) of *both* teams involved. See more: <https://assets.deadlock-api.com/v2/ranks>","required":false,"schema":{"type":["integer","null"],"format":"int32","maximum":116,"minimum":0}},{"name":"max_average_badge","in":"query","description":"Filter matches based on the average badge level (0-116) of *both* teams involved. See more: <https://assets.deadlock-api.com/v2/ranks>","required":false,"schema":{"type":["integer","null"],"format":"int32","maximum":116,"minimum":0}},{"name":"min_match_id","in":"query","description":"Filter matches based on their ID.","required":false,"schema":{"type":["integer","null"],"format":"int64","minimum":0}},{"name":"max_match_id","in":"query","description":"Filter matches based on their ID.","required":false,"schema":{"type":["integer","null"],"format":"int64","minimum":0}},{"name":"min_matches","in":"query","description":"The minimum number of matches played for an ability order to be included in the response.","required":false,"schema":{"type":["integer","null"],"format":"int32","default":20,"minimum":1}},{"name":"account_id","in":"query","description":"Filter for matches with a specific player account ID.","required":false,"deprecated":true,"schema":{"type":["integer","null"],"format":"int32","minimum":0}},{"name":"account_ids","in":"query","description":"Comma separated list of account ids to include","required":false,"schema":{"type":["array","null"],"items":{"type":"integer","format":"int32","minimum":0}}}],"responses":{"200":{"description":"Ability Order Stats","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/AnalyticsAbilityOrderStats"}}}}},"400":{"description":"Provided parameters are invalid."},"500":{"description":"Failed to fetch ability order stats"}}}},"/v1/analytics/build-item-stats":{"get":{"tags":["Analytics"],"summary":"Build Item Stats","description":"\nRetrieves item statistics from hero builds.\n\nResults are cached for **1 hour** based on the unique combination of query parameters provided. Subsequent identical requests within this timeframe will receive the cached response.\n\n### Rate Limits:\n| Type | Limit |\n| ---- | ----- |\n| IP | 100req/s |\n| Key | - |\n| Global | - |\n    ","operationId":"build_item_stats","parameters":[{"name":"hero_id","in":"query","description":"Filter builds based on the hero ID. See more: <https://assets.deadlock-api.com/v2/heroes>","required":false,"schema":{"type":["integer","null"],"format":"int32","minimum":0}},{"name":"min_last_updated_unix_timestamp","in":"query","description":"Filter builds based on their last updated time (Unix timestamp). **Default:** 30 days ago.","required":false,"schema":{"type":["integer","null"],"format":"int64","default":1754784000}},{"name":"max_last_updated_unix_timestamp","in":"query","description":"Filter builds based on their last updated time (Unix timestamp).","required":false,"schema":{"type":["integer","null"],"format":"int64"}}],"responses":{"200":{"description":"Build Item Stats","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/BuildItemStats"}}}}},"400":{"description":"Provided parameters are invalid."},"500":{"description":"Failed to fetch build item stats"}}}},"/v1/analytics/hero-comb-stats":{"get":{"tags":["Analytics"],"summary":"Hero Comb Stats","description":"\nRetrieves overall statistics for each hero combination.\n\nResults are cached for **1 hour**. The cache key is determined by the specific combination of filter parameters used in the query. Subsequent requests using the exact same filters within this timeframe will receive the cached response.\n\n### Rate Limits:\n| Type | Limit |\n| ---- | ----- |\n| IP | 100req/s |\n| Key | - |\n| Global | - |\n    ","operationId":"hero_comb_stats","parameters":[{"name":"min_unix_timestamp","in":"query","description":"Filter matches based on their start time (Unix timestamp). **Default:** 30 days ago.","required":false,"schema":{"type":["integer","null"],"format":"int64","default":1754784000}},{"name":"max_unix_timestamp","in":"query","description":"Filter matches based on their start time (Unix timestamp).","required":false,"schema":{"type":["integer","null"],"format":"int64"}},{"name":"min_duration_s","in":"query","description":"Filter matches based on their duration in seconds (up to 7000s).","required":false,"schema":{"type":["integer","null"],"format":"int64","maximum":7000,"minimum":0}},{"name":"max_duration_s","in":"query","description":"Filter matches based on their duration in seconds (up to 7000s).","required":false,"schema":{"type":["integer","null"],"format":"int64","maximum":7000,"minimum":0}},{"name":"min_networth","in":"query","description":"Filter players based on their net worth.","required":false,"schema":{"type":["integer","null"],"format":"int64","minimum":0}},{"name":"max_networth","in":"query","description":"Filter players based on their net worth.","required":false,"schema":{"type":["integer","null"],"format":"int64","minimum":0}},{"name":"min_average_badge","in":"query","description":"Filter matches based on the average badge level (0-116) of *both* teams involved. See more: <https://assets.deadlock-api.com/v2/ranks>","required":false,"schema":{"type":["integer","null"],"format":"int32","maximum":116,"minimum":0}},{"name":"max_average_badge","in":"query","description":"Filter matches based on the average badge level (0-116) of *both* teams involved. See more: <https://assets.deadlock-api.com/v2/ranks>","required":false,"schema":{"type":["integer","null"],"format":"int32","maximum":116,"minimum":0}},{"name":"min_match_id","in":"query","description":"Filter matches based on their ID.","required":false,"schema":{"type":["integer","null"],"format":"int64","minimum":0}},{"name":"max_match_id","in":"query","description":"Filter matches based on their ID.","required":false,"schema":{"type":["integer","null"],"format":"int64","minimum":0}},{"name":"include_hero_ids","in":"query","description":"Comma separated list of hero ids to include. See more: <https://assets.deadlock-api.com/v2/heroes>","required":false,"schema":{"type":["array","null"],"items":{"type":"integer","format":"int32","minimum":0}}},{"name":"exclude_hero_ids","in":"query","description":"Comma separated list of hero ids to exclude. See more: <https://assets.deadlock-api.com/v2/heroes>","required":false,"schema":{"type":["array","null"],"items":{"type":"integer","format":"int32","minimum":0}}},{"name":"min_matches","in":"query","description":"The minimum number of matches played for a hero combination to be included in the response.","required":false,"schema":{"type":["integer","null"],"format":"int32","default":20,"minimum":1}},{"name":"max_matches","in":"query","description":"The maximum number of matches played for a hero combination to be included in the response.","required":false,"schema":{"type":["integer","null"],"format":"int32","minimum":1}},{"name":"comb_size","in":"query","description":"The combination size to return.","required":false,"schema":{"type":["integer","null"],"format":"int32","default":6,"maximum":6,"minimum":2}},{"name":"account_id","in":"query","description":"Filter for matches with a specific player account ID.","required":false,"deprecated":true,"schema":{"type":["integer","null"],"format":"int32","minimum":0}},{"name":"account_ids","in":"query","description":"Comma separated list of account ids to include","required":false,"schema":{"type":["array","null"],"items":{"type":"integer","format":"int32","minimum":0}}}],"responses":{"200":{"description":"Hero Comb Stats","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/HeroCombStats"}}}}},"400":{"description":"Provided parameters are invalid."},"500":{"description":"Failed to fetch hero comb stats"}}}},"/v1/analytics/hero-counter-stats":{"get":{"tags":["Analytics"],"summary":"Hero Counter Stats","description":"\nRetrieves hero-versus-hero matchup statistics based on historical match data.\n\nThis endpoint analyzes completed matches to calculate how often a specific hero (`hero_id`) wins against an enemy hero (`enemy_hero_id`) and the total number of times they have faced each other under the specified filter conditions.\n\nResults are cached for **1 hour** based on the combination of query parameters provided. Subsequent identical requests within this timeframe will receive the cached response.\n\n### Rate Limits:\n| Type | Limit |\n| ---- | ----- |\n| IP | 100req/s |\n| Key | - |\n| Global | - |\n    ","operationId":"hero_counters_stats","parameters":[{"name":"min_unix_timestamp","in":"query","description":"Filter matches based on their start time (Unix timestamp). **Default:** 30 days ago.","required":false,"schema":{"type":["integer","null"],"format":"int64","default":1754784000}},{"name":"max_unix_timestamp","in":"query","description":"Filter matches based on their start time (Unix timestamp).","required":false,"schema":{"type":["integer","null"],"format":"int64"}},{"name":"min_duration_s","in":"query","description":"Filter matches based on their duration in seconds (up to 7000s).","required":false,"schema":{"type":["integer","null"],"format":"int64","maximum":7000,"minimum":0}},{"name":"max_duration_s","in":"query","description":"Filter matches based on their duration in seconds (up to 7000s).","required":false,"schema":{"type":["integer","null"],"format":"int64","maximum":7000,"minimum":0}},{"name":"min_networth","in":"query","description":"Filter players based on their net worth.","required":false,"schema":{"type":["integer","null"],"format":"int64","minimum":0}},{"name":"max_networth","in":"query","description":"Filter players based on their net worth.","required":false,"schema":{"type":["integer","null"],"format":"int64","minimum":0}},{"name":"min_enemy_networth","in":"query","description":"Filter enemy players based on their net worth.","required":false,"schema":{"type":["integer","null"],"format":"int64","minimum":0}},{"name":"max_enemy_networth","in":"query","description":"Filter enemy players based on their net worth.","required":false,"schema":{"type":["integer","null"],"format":"int64","minimum":0}},{"name":"min_average_badge","in":"query","description":"Filter matches based on the average badge level (0-116) of *both* teams involved. See more: <https://assets.deadlock-api.com/v2/ranks>","required":false,"schema":{"type":["integer","null"],"format":"int32","maximum":116,"minimum":0}},{"name":"max_average_badge","in":"query","description":"Filter matches based on the average badge level (0-116) of *both* teams involved. See more: <https://assets.deadlock-api.com/v2/ranks>","required":false,"schema":{"type":["integer","null"],"format":"int32","maximum":116,"minimum":0}},{"name":"min_match_id","in":"query","description":"Filter matches based on their ID.","required":false,"schema":{"type":["integer","null"],"format":"int64","minimum":0}},{"name":"max_match_id","in":"query","description":"Filter matches based on their ID.","required":false,"schema":{"type":["integer","null"],"format":"int64","minimum":0}},{"name":"same_lane_filter","in":"query","description":"When `true`, only considers matchups where both `hero_id` and `enemy_hero_id` were assigned to the same lane (e.g., both Mid Lane). When `false`, considers all matchups regardless of assigned lane.","required":false,"schema":{"type":["boolean","null"],"default":true}},{"name":"min_matches","in":"query","description":"The minimum number of matches played for a hero combination to be included in the response.","required":false,"schema":{"type":["integer","null"],"format":"int64","default":20,"minimum":1}},{"name":"max_matches","in":"query","description":"The maximum number of matches played for a hero combination to be included in the response.","required":false,"schema":{"type":["integer","null"],"format":"int32","minimum":1}},{"name":"account_id","in":"query","description":"Filter for matches with a specific player account ID.","required":false,"deprecated":true,"schema":{"type":["integer","null"],"format":"int32","minimum":0}},{"name":"account_ids","in":"query","description":"Comma separated list of account ids to include","required":false,"schema":{"type":["array","null"],"items":{"type":"integer","format":"int32","minimum":0}}}],"responses":{"200":{"description":"Hero Counter Stats","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/HeroCounterStats"}}}}},"400":{"description":"Provided parameters are invalid."},"500":{"description":"Failed to fetch hero counter stats"}}}},"/v1/analytics/hero-stats":{"get":{"tags":["Analytics"],"summary":"Hero Stats","description":"\nRetrieves performance statistics for each hero based on historical match data.\n\n### Rate Limits:\n| Type | Limit |\n| ---- | ----- |\n| IP | 100req/s |\n| Key | - |\n| Global | - |\n    ","operationId":"hero_stats","parameters":[{"name":"bucket","in":"query","description":"Bucket allows you to group the stats by a specific field.","required":false,"schema":{"type":"string","enum":["no_bucket","start_time_hour","start_time_day","start_time_week","start_time_month"]}},{"name":"min_unix_timestamp","in":"query","description":"Filter matches based on their start time (Unix timestamp). **Default:** 30 days ago.","required":false,"schema":{"type":["integer","null"],"format":"int64","default":1754784000}},{"name":"max_unix_timestamp","in":"query","description":"Filter matches based on their start time (Unix timestamp).","required":false,"schema":{"type":["integer","null"],"format":"int64"}},{"name":"min_duration_s","in":"query","description":"Filter matches based on their duration in seconds (up to 7000s).","required":false,"schema":{"type":["integer","null"],"format":"int64","maximum":7000,"minimum":0}},{"name":"max_duration_s","in":"query","description":"Filter matches based on their duration in seconds (up to 7000s).","required":false,"schema":{"type":["integer","null"],"format":"int64","maximum":7000,"minimum":0}},{"name":"min_networth","in":"query","description":"Filter players based on their net worth.","required":false,"schema":{"type":["integer","null"],"format":"int64","minimum":0}},{"name":"max_networth","in":"query","description":"Filter players based on their net worth.","required":false,"schema":{"type":["integer","null"],"format":"int64","minimum":0}},{"name":"min_average_badge","in":"query","description":"Filter matches based on the average badge level (0-116) of *both* teams involved. See more: <https://assets.deadlock-api.com/v2/ranks>","required":false,"schema":{"type":["integer","null"],"format":"int32","maximum":116,"minimum":0}},{"name":"max_average_badge","in":"query","description":"Filter matches based on the average badge level (0-116) of *both* teams involved. See more: <https://assets.deadlock-api.com/v2/ranks>","required":false,"schema":{"type":["integer","null"],"format":"int32","maximum":116,"minimum":0}},{"name":"min_match_id","in":"query","description":"Filter matches based on their ID.","required":false,"schema":{"type":["integer","null"],"format":"int64","minimum":0}},{"name":"max_match_id","in":"query","description":"Filter matches based on their ID.","required":false,"schema":{"type":["integer","null"],"format":"int64","minimum":0}},{"name":"min_hero_matches","in":"query","description":"Filter players based on the number of matches they have played with a specific hero.","required":false,"schema":{"type":["integer","null"],"format":"int64","minimum":0}},{"name":"max_hero_matches","in":"query","description":"Filter players based on the number of matches they have played with a specific hero.","required":false,"schema":{"type":["integer","null"],"format":"int64","minimum":0}},{"name":"include_item_ids","in":"query","description":"Comma separated list of item ids to include (only heroes who have purchased these items). See more: <https://assets.deadlock-api.com/v2/items>","required":false,"schema":{"type":["array","null"],"items":{"type":"integer","format":"int32","minimum":0}}},{"name":"exclude_item_ids","in":"query","description":"Comma separated list of item ids to exclude (only heroes who have not purchased these items). See more: <https://assets.deadlock-api.com/v2/items>","required":false,"schema":{"type":["array","null"],"items":{"type":"integer","format":"int32","minimum":0}}},{"name":"account_id","in":"query","description":"Filter for matches with a specific player account ID.","required":false,"deprecated":true,"schema":{"type":["integer","null"],"format":"int32","minimum":0}},{"name":"account_ids","in":"query","description":"Comma separated list of account ids to include","required":false,"schema":{"type":["array","null"],"items":{"type":"integer","format":"int32","minimum":0}}}],"responses":{"200":{"description":"Hero Stats","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/AnalyticsHeroStats"}}}}},"400":{"description":"Provided parameters are invalid."},"500":{"description":"Failed to fetch hero stats"}}}},"/v1/analytics/hero-synergy-stats":{"get":{"tags":["Analytics"],"summary":"Hero Synergy Stats","description":"\nRetrieves hero pair synergy statistics based on historical match data.\n\nThis endpoint analyzes completed matches to calculate how often a specific pair of heroes (`hero_id1` and `hero_id2`) won when playing *together on the same team*, and the total number of times they have played together under the specified filter conditions.\n\nResults are cached for **1 hour** based on the combination of query parameters provided. Subsequent identical requests within this timeframe will receive the cached response.\n\n### Rate Limits:\n| Type | Limit |\n| ---- | ----- |\n| IP | 100req/s |\n| Key | - |\n| Global | - |\n    ","operationId":"hero_synergies_stats","parameters":[{"name":"min_unix_timestamp","in":"query","description":"Filter matches based on their start time (Unix timestamp). **Default:** 30 days ago.","required":false,"schema":{"type":["integer","null"],"format":"int64","default":1754784000}},{"name":"max_unix_timestamp","in":"query","description":"Filter matches based on their start time (Unix timestamp).","required":false,"schema":{"type":["integer","null"],"format":"int64"}},{"name":"min_duration_s","in":"query","description":"Filter matches based on their duration in seconds (up to 7000s).","required":false,"schema":{"type":["integer","null"],"format":"int64","maximum":7000,"minimum":0}},{"name":"max_duration_s","in":"query","description":"Filter matches based on their duration in seconds (up to 7000s).","required":false,"schema":{"type":["integer","null"],"format":"int64","maximum":7000,"minimum":0}},{"name":"min_networth","in":"query","description":"Filter players based on their net worth.","required":false,"schema":{"type":["integer","null"],"format":"int64","minimum":0}},{"name":"max_networth","in":"query","description":"Filter players based on their net worth.","required":false,"schema":{"type":["integer","null"],"format":"int64","minimum":0}},{"name":"min_average_badge","in":"query","description":"Filter matches based on the average badge level (0-116) of *both* teams involved. See more: <https://assets.deadlock-api.com/v2/ranks>","required":false,"schema":{"type":["integer","null"],"format":"int32","maximum":116,"minimum":0}},{"name":"max_average_badge","in":"query","description":"Filter matches based on the average badge level (0-116) of *both* teams involved. See more: <https://assets.deadlock-api.com/v2/ranks>","required":false,"schema":{"type":["integer","null"],"format":"int32","maximum":116,"minimum":0}},{"name":"min_match_id","in":"query","description":"Filter matches based on their ID.","required":false,"schema":{"type":["integer","null"],"format":"int64","minimum":0}},{"name":"max_match_id","in":"query","description":"Filter matches based on their ID.","required":false,"schema":{"type":["integer","null"],"format":"int64","minimum":0}},{"name":"same_lane_filter","in":"query","description":"When `true`, only considers matchups where both `hero_id1` and `hero_id2` were assigned to the same lane (e.g., both Mid Lane). When `false`, considers all matchups regardless of assigned lane.","required":false,"schema":{"type":["boolean","null"],"default":true}},{"name":"same_party_filter","in":"query","description":"When `true`, only considers matchups where both `hero_id` and `hero_id2` were on the same party. When `false`, considers all matchups regardless of party affiliation.","required":false,"schema":{"type":["boolean","null"],"default":true}},{"name":"min_matches","in":"query","description":"The minimum number of matches played for a hero combination to be included in the response.","required":false,"schema":{"type":["integer","null"],"format":"int64","default":20,"minimum":1}},{"name":"max_matches","in":"query","description":"The maximum number of matches played for a hero combination to be included in the response.","required":false,"schema":{"type":["integer","null"],"format":"int32","minimum":1}},{"name":"account_id","in":"query","description":"Filter for matches with a specific player account ID.","required":false,"deprecated":true,"schema":{"type":["integer","null"],"format":"int32","minimum":0}},{"name":"account_ids","in":"query","description":"Comma separated list of account ids to include","required":false,"schema":{"type":["array","null"],"items":{"type":"integer","format":"int32","minimum":0}}}],"responses":{"200":{"description":"Hero Synergy Stats","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/HeroSynergyStats"}}}}},"400":{"description":"Provided parameters are invalid."},"500":{"description":"Failed to fetch hero synergy stats"}}}},"/v1/analytics/item-permutation-stats":{"get":{"tags":["Analytics"],"summary":"Item Permutation Stats","description":"\nRetrieves item permutation statistics based on historical match data.\n\nResults are cached for **1 hour** based on the unique combination of query parameters provided. Subsequent identical requests within this timeframe will receive the cached response.\n\n### Rate Limits:\n| Type | Limit |\n| ---- | ----- |\n| IP | 100req/s |\n| Key | - |\n| Global | - |\n    ","operationId":"item_permutation_stats","parameters":[{"name":"item_ids","in":"query","description":"Comma separated list of item ids. See more: <https://assets.deadlock-api.com/v2/items>","required":false,"schema":{"type":["array","null"],"items":{"type":"integer","format":"int32","minimum":0}}},{"name":"comb_size","in":"query","description":"The combination size to return.","required":false,"schema":{"type":["integer","null"],"format":"int32","default":2,"maximum":12,"minimum":2}},{"name":"hero_ids","in":"query","description":"Filter matches based on the hero IDs. See more: <https://assets.deadlock-api.com/v2/heroes>","required":false,"schema":{"type":["string","null"]}},{"name":"hero_id","in":"query","description":"Filter matches based on the hero ID. See more: <https://assets.deadlock-api.com/v2/heroes>","required":false,"deprecated":true,"schema":{"type":["integer","null"],"format":"int32","minimum":0}},{"name":"min_unix_timestamp","in":"query","description":"Filter matches based on their start time (Unix timestamp). **Default:** 30 days ago.","required":false,"schema":{"type":["integer","null"],"format":"int64","default":1754784000}},{"name":"max_unix_timestamp","in":"query","description":"Filter matches based on their start time (Unix timestamp).","required":false,"schema":{"type":["integer","null"],"format":"int64"}},{"name":"min_duration_s","in":"query","description":"Filter matches based on their duration in seconds (up to 7000s).","required":false,"schema":{"type":["integer","null"],"format":"int64","maximum":7000,"minimum":0}},{"name":"max_duration_s","in":"query","description":"Filter matches based on their duration in seconds (up to 7000s).","required":false,"schema":{"type":["integer","null"],"format":"int64","maximum":7000,"minimum":0}},{"name":"min_networth","in":"query","description":"Filter players based on their net worth.","required":false,"schema":{"type":["integer","null"],"format":"int64","minimum":0}},{"name":"max_networth","in":"query","description":"Filter players based on their net worth.","required":false,"schema":{"type":["integer","null"],"format":"int64","minimum":0}},{"name":"min_average_badge","in":"query","description":"Filter matches based on the average badge level (0-116) of *both* teams involved. See more: <https://assets.deadlock-api.com/v2/ranks>","required":false,"schema":{"type":["integer","null"],"format":"int32","maximum":116,"minimum":0}},{"name":"max_average_badge","in":"query","description":"Filter matches based on the average badge level (0-116) of *both* teams involved. See more: <https://assets.deadlock-api.com/v2/ranks>","required":false,"schema":{"type":["integer","null"],"format":"int32","maximum":116,"minimum":0}},{"name":"min_match_id","in":"query","description":"Filter matches based on their ID.","required":false,"schema":{"type":["integer","null"],"format":"int64","minimum":0}},{"name":"max_match_id","in":"query","description":"Filter matches based on their ID.","required":false,"schema":{"type":["integer","null"],"format":"int64","minimum":0}},{"name":"account_id","in":"query","description":"Filter for matches with a specific player account ID.","required":false,"deprecated":true,"schema":{"type":["integer","null"],"format":"int32","minimum":0}},{"name":"account_ids","in":"query","description":"Comma separated list of account ids to include","required":false,"schema":{"type":["array","null"],"items":{"type":"integer","format":"int32","minimum":0}}}],"responses":{"200":{"description":"Item Stats","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/ItemPermutationStats"}}}}},"400":{"description":"Provided parameters are invalid."},"500":{"description":"Failed to fetch item stats"}}}},"/v1/analytics/item-stats":{"get":{"tags":["Analytics"],"summary":"Item Stats","description":"\nRetrieves item statistics based on historical match data.\n\nResults are cached for **1 hour** based on the unique combination of query parameters provided. Subsequent identical requests within this timeframe will receive the cached response.\n\n### Rate Limits:\n| Type | Limit |\n| ---- | ----- |\n| IP | 100req/s |\n| Key | - |\n| Global | - |\n    ","operationId":"item_stats","parameters":[{"name":"bucket","in":"query","description":"Bucket allows you to group the stats by a specific field.","required":false,"schema":{"type":"string","enum":["no_bucket","hero","team","start_time_hour","start_time_day","start_time_week","start_time_month","game_time_min","game_time_normalized_percentage","net_worth_by_1000","net_worth_by_2000","net_worth_by_3000","net_worth_by_5000","net_worth_by_10000"]}},{"name":"hero_ids","in":"query","description":"Filter matches based on the hero IDs. See more: <https://assets.deadlock-api.com/v2/heroes>","required":false,"schema":{"type":["string","null"]}},{"name":"hero_id","in":"query","description":"Filter matches based on the hero ID. See more: <https://assets.deadlock-api.com/v2/heroes>","required":false,"deprecated":true,"schema":{"type":["integer","null"],"format":"int32","minimum":0}},{"name":"min_unix_timestamp","in":"query","description":"Filter matches based on their start time (Unix timestamp). **Default:** 30 days ago.","required":false,"schema":{"type":["integer","null"],"format":"int64","default":1754784000}},{"name":"max_unix_timestamp","in":"query","description":"Filter matches based on their start time (Unix timestamp).","required":false,"schema":{"type":["integer","null"],"format":"int64"}},{"name":"min_duration_s","in":"query","description":"Filter matches based on their duration in seconds (up to 7000s).","required":false,"schema":{"type":["integer","null"],"format":"int64","maximum":7000,"minimum":0}},{"name":"max_duration_s","in":"query","description":"Filter matches based on their duration in seconds (up to 7000s).","required":false,"schema":{"type":["integer","null"],"format":"int64","maximum":7000,"minimum":0}},{"name":"min_networth","in":"query","description":"Filter players based on their net worth.","required":false,"schema":{"type":["integer","null"],"format":"int64","minimum":0}},{"name":"max_networth","in":"query","description":"Filter players based on their net worth.","required":false,"schema":{"type":["integer","null"],"format":"int64","minimum":0}},{"name":"min_average_badge","in":"query","description":"Filter matches based on the average badge level (0-116) of *both* teams involved. See more: <https://assets.deadlock-api.com/v2/ranks>","required":false,"schema":{"type":["integer","null"],"format":"int32","maximum":116,"minimum":0}},{"name":"max_average_badge","in":"query","description":"Filter matches based on the average badge level (0-116) of *both* teams involved. See more: <https://assets.deadlock-api.com/v2/ranks>","required":false,"schema":{"type":["integer","null"],"format":"int32","maximum":116,"minimum":0}},{"name":"min_match_id","in":"query","description":"Filter matches based on their ID.","required":false,"schema":{"type":["integer","null"],"format":"int64","minimum":0}},{"name":"max_match_id","in":"query","description":"Filter matches based on their ID.","required":false,"schema":{"type":["integer","null"],"format":"int64","minimum":0}},{"name":"include_item_ids","in":"query","description":"Comma separated list of item ids to include. See more: <https://assets.deadlock-api.com/v2/items>","required":false,"schema":{"type":["array","null"],"items":{"type":"integer","format":"int32","minimum":0}}},{"name":"exclude_item_ids","in":"query","description":"Comma separated list of item ids to exclude. See more: <https://assets.deadlock-api.com/v2/items>","required":false,"schema":{"type":["array","null"],"items":{"type":"integer","format":"int32","minimum":0}}},{"name":"min_matches","in":"query","description":"The minimum number of matches played for an item to be included in the response.","required":false,"schema":{"type":["integer","null"],"format":"int32","default":20,"minimum":1}},{"name":"max_matches","in":"query","description":"The maximum number of matches played for a hero combination to be included in the response.","required":false,"schema":{"type":["integer","null"],"format":"int32","minimum":1}},{"name":"account_id","in":"query","description":"Filter for matches with a specific player account ID.","required":false,"deprecated":true,"schema":{"type":["integer","null"],"format":"int32","minimum":0}},{"name":"account_ids","in":"query","description":"Comma separated list of account ids to include","required":false,"schema":{"type":["array","null"],"items":{"type":"integer","format":"int32","minimum":0}}}],"responses":{"200":{"description":"Item Stats","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/ItemStats"}}}}},"400":{"description":"Provided parameters are invalid."},"500":{"description":"Failed to fetch item stats"}}}},"/v1/analytics/player-stats/metrics":{"get":{"tags":["Analytics"],"summary":"Player Stats Metrics","description":"\nReturns comprehensive statistical analysis of player performance.\n\nResults are cached for **1 hour** based on the unique combination of query parameters provided. Subsequent identical requests within this timeframe will receive the cached response.\n\n> Note: Quantiles are calculated using the [DDSketch](https://www.vldb.org/pvldb/vol12/p2195-masson.pdf) algorithm, so they are not exact but have a maximum relative error of 0.01.\n\n### Rate Limits:\n| Type | Limit |\n| ---- | ----- |\n| IP | 100req/s |\n| Key | - |\n| Global | - |\n    ","operationId":"player_stats_metrics","parameters":[{"name":"hero_ids","in":"query","description":"Filter matches based on the hero IDs. See more: <https://assets.deadlock-api.com/v2/heroes>","required":false,"schema":{"type":["string","null"]}},{"name":"min_unix_timestamp","in":"query","description":"Filter matches based on their start time (Unix timestamp). **Default:** 30 days ago.","required":false,"schema":{"type":["integer","null"],"format":"int64","default":1754784000}},{"name":"max_unix_timestamp","in":"query","description":"Filter matches based on their start time (Unix timestamp).","required":false,"schema":{"type":["integer","null"],"format":"int64"}},{"name":"min_duration_s","in":"query","description":"Filter matches based on their duration in seconds (up to 7000s).","required":false,"schema":{"type":["integer","null"],"format":"int64","maximum":7000,"minimum":0}},{"name":"max_duration_s","in":"query","description":"Filter matches based on their duration in seconds (up to 7000s).","required":false,"schema":{"type":["integer","null"],"format":"int64","maximum":7000,"minimum":0}},{"name":"min_networth","in":"query","description":"Filter players based on their net worth.","required":false,"schema":{"type":["integer","null"],"format":"int64","minimum":0}},{"name":"max_networth","in":"query","description":"Filter players based on their net worth.","required":false,"schema":{"type":["integer","null"],"format":"int64","minimum":0}},{"name":"min_average_badge","in":"query","description":"Filter matches based on the average badge level (0-116) of *both* teams involved. See more: <https://assets.deadlock-api.com/v2/ranks>","required":false,"schema":{"type":["integer","null"],"format":"int32","maximum":116,"minimum":0}},{"name":"max_average_badge","in":"query","description":"Filter matches based on the average badge level (0-116) of *both* teams involved. See more: <https://assets.deadlock-api.com/v2/ranks>","required":false,"schema":{"type":["integer","null"],"format":"int32","maximum":116,"minimum":0}},{"name":"min_match_id","in":"query","description":"Filter matches based on their ID.","required":false,"schema":{"type":["integer","null"],"format":"int64","minimum":0}},{"name":"max_match_id","in":"query","description":"Filter matches based on their ID.","required":false,"schema":{"type":["integer","null"],"format":"int64","minimum":0}},{"name":"max_matches","in":"query","description":"The maximum number of matches to analyze.","required":false,"schema":{"type":["integer","null"],"format":"int32","minimum":1}},{"name":"include_item_ids","in":"query","description":"Comma separated list of item ids to include (only heroes who have purchased these items). See more: <https://assets.deadlock-api.com/v2/items>","required":false,"schema":{"type":["array","null"],"items":{"type":"integer","format":"int32","minimum":0}}},{"name":"exclude_item_ids","in":"query","description":"Comma separated list of item ids to exclude (only heroes who have not purchased these items). See more: <https://assets.deadlock-api.com/v2/items>","required":false,"schema":{"type":["array","null"],"items":{"type":"integer","format":"int32","minimum":0}}},{"name":"account_ids","in":"query","description":"Comma separated list of account ids to include","required":false,"schema":{"type":["array","null"],"items":{"type":"integer","format":"int32","minimum":0}}}],"responses":{"200":{"description":"Hero Stats","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HashMap"}}}},"400":{"description":"Provided parameters are invalid."},"500":{"description":"Failed to fetch player stats metrics"}}}},"/v1/analytics/scoreboards/heroes":{"get":{"tags":["Analytics"],"summary":"Hero Scoreboard","description":"\nThis endpoint returns the hero scoreboard.\n\n### Rate Limits:\n| Type | Limit |\n| ---- | ----- |\n| IP | 100req/s |\n| Key | - |\n| Global | - |\n    ","operationId":"hero_scoreboard","parameters":[{"name":"sort_by","in":"query","description":"The field to sort by.","required":true,"schema":{"type":"string","enum":["matches","wins","losses","winrate","max_kills_per_match","avg_kills_per_match","kills","max_deaths_per_match","avg_deaths_per_match","deaths","max_damage_taken_per_match","avg_damage_taken_per_match","damage_taken","max_assists_per_match","avg_assists_per_match","assists","max_net_worth_per_match","avg_net_worth_per_match","net_worth","max_last_hits_per_match","avg_last_hits_per_match","last_hits","max_denies_per_match","avg_denies_per_match","denies","max_player_level_per_match","avg_player_level_per_match","player_level","max_creep_kills_per_match","avg_creep_kills_per_match","creep_kills","max_neutral_kills_per_match","avg_neutral_kills_per_match","neutral_kills","max_creep_damage_per_match","avg_creep_damage_per_match","creep_damage","max_player_damage_per_match","avg_player_damage_per_match","player_damage","max_neutral_damage_per_match","avg_neutral_damage_per_match","neutral_damage","max_boss_damage_per_match","avg_boss_damage_per_match","boss_damage","max_max_health_per_match","avg_max_health_per_match","max_health","max_shots_hit_per_match","avg_shots_hit_per_match","shots_hit","max_shots_missed_per_match","avg_shots_missed_per_match","shots_missed","max_hero_bullets_hit_per_match","avg_hero_bullets_hit_per_match","hero_bullets_hit","max_hero_bullets_hit_crit_per_match","avg_hero_bullets_hit_crit_per_match","hero_bullets_hit_crit"]}},{"name":"sort_direction","in":"query","description":"The direction to sort heroes in.","required":false,"schema":{"type":"string","enum":["desc","asc"]}},{"name":"min_matches","in":"query","description":"Filter by min number of matches played.","required":false,"schema":{"type":["integer","null"],"format":"int32","minimum":0}},{"name":"min_unix_timestamp","in":"query","description":"Filter matches based on their start time (Unix timestamp). **Default:** 30 days ago.","required":false,"schema":{"type":["integer","null"],"format":"int64","default":1754784000}},{"name":"max_unix_timestamp","in":"query","description":"Filter matches based on their start time (Unix timestamp).","required":false,"schema":{"type":["integer","null"],"format":"int64"}},{"name":"min_duration_s","in":"query","description":"Filter matches based on their duration in seconds (up to 7000s).","required":false,"schema":{"type":["integer","null"],"format":"int64","maximum":7000,"minimum":0}},{"name":"max_duration_s","in":"query","description":"Filter matches based on their duration in seconds (up to 7000s).","required":false,"schema":{"type":["integer","null"],"format":"int64","maximum":7000,"minimum":0}},{"name":"min_networth","in":"query","description":"Filter players based on their net worth.","required":false,"schema":{"type":["integer","null"],"format":"int64","minimum":0}},{"name":"max_networth","in":"query","description":"Filter players based on their net worth.","required":false,"schema":{"type":["integer","null"],"format":"int64","minimum":0}},{"name":"min_average_badge","in":"query","description":"Filter matches based on the average badge level (0-116) of *both* teams involved. See more: <https://assets.deadlock-api.com/v2/ranks>","required":false,"schema":{"type":["integer","null"],"format":"int32","maximum":116,"minimum":0}},{"name":"max_average_badge","in":"query","description":"Filter matches based on the average badge level (0-116) of *both* teams involved. See more: <https://assets.deadlock-api.com/v2/ranks>","required":false,"schema":{"type":["integer","null"],"format":"int32","maximum":116,"minimum":0}},{"name":"min_match_id","in":"query","description":"Filter matches based on their ID.","required":false,"schema":{"type":["integer","null"],"format":"int64","minimum":0}},{"name":"max_match_id","in":"query","description":"Filter matches based on their ID.","required":false,"schema":{"type":["integer","null"],"format":"int64","minimum":0}},{"name":"account_id","in":"query","description":"Filter for matches with a specific player account ID.","required":false,"deprecated":true,"schema":{"type":["integer","null"],"format":"int32","minimum":0}},{"name":"account_ids","in":"query","description":"Comma separated list of account ids to include","required":false,"schema":{"type":["array","null"],"items":{"type":"integer","format":"int32","minimum":0}}}],"responses":{"200":{"description":"Hero Scoreboard","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Entry"}}}}},"400":{"description":"Provided parameters are invalid."},"500":{"description":"Failed to fetch hero scoreboard"}}}},"/v1/analytics/scoreboards/players":{"get":{"tags":["Analytics"],"summary":"Player Scoreboard","description":"\nThis endpoint returns the player scoreboard.\n\n### Rate Limits:\n| Type | Limit |\n| ---- | ----- |\n| IP | 100req/s |\n| Key | - |\n| Global | - |\n    ","operationId":"player_scoreboard","parameters":[{"name":"sort_by","in":"query","description":"The field to sort by.","required":true,"schema":{"type":"string","enum":["matches","wins","losses","winrate","max_kills_per_match","avg_kills_per_match","kills","max_deaths_per_match","avg_deaths_per_match","deaths","max_damage_taken_per_match","avg_damage_taken_per_match","damage_taken","max_assists_per_match","avg_assists_per_match","assists","max_net_worth_per_match","avg_net_worth_per_match","net_worth","max_last_hits_per_match","avg_last_hits_per_match","last_hits","max_denies_per_match","avg_denies_per_match","denies","max_player_level_per_match","avg_player_level_per_match","player_level","max_creep_kills_per_match","avg_creep_kills_per_match","creep_kills","max_neutral_kills_per_match","avg_neutral_kills_per_match","neutral_kills","max_creep_damage_per_match","avg_creep_damage_per_match","creep_damage","max_player_damage_per_match","avg_player_damage_per_match","player_damage","max_neutral_damage_per_match","avg_neutral_damage_per_match","neutral_damage","max_boss_damage_per_match","avg_boss_damage_per_match","boss_damage","max_max_health_per_match","avg_max_health_per_match","max_health","max_shots_hit_per_match","avg_shots_hit_per_match","shots_hit","max_shots_missed_per_match","avg_shots_missed_per_match","shots_missed","max_hero_bullets_hit_per_match","avg_hero_bullets_hit_per_match","hero_bullets_hit","max_hero_bullets_hit_crit_per_match","avg_hero_bullets_hit_crit_per_match","hero_bullets_hit_crit"]}},{"name":"sort_direction","in":"query","description":"The direction to sort players in.","required":false,"schema":{"type":"string","enum":["desc","asc"]}},{"name":"hero_id","in":"query","description":"Filter matches based on the hero ID. See more: <https://assets.deadlock-api.com/v2/heroes>","required":false,"schema":{"type":["integer","null"],"format":"int32","minimum":0}},{"name":"min_matches","in":"query","description":"The minimum number of matches played for a player to be included in the scoreboard.","required":false,"schema":{"type":["integer","null"],"format":"int32","default":20,"minimum":1}},{"name":"max_matches","in":"query","description":"The maximum number of matches played for a hero combination to be included in the response.","required":false,"schema":{"type":["integer","null"],"format":"int32","minimum":1}},{"name":"min_unix_timestamp","in":"query","description":"Filter matches based on their start time (Unix timestamp).","required":false,"schema":{"type":["integer","null"],"format":"int64"}},{"name":"max_unix_timestamp","in":"query","description":"Filter matches based on their start time (Unix timestamp).","required":false,"schema":{"type":["integer","null"],"format":"int64"}},{"name":"min_duration_s","in":"query","description":"Filter matches based on their duration in seconds (up to 7000s).","required":false,"schema":{"type":["integer","null"],"format":"int64","maximum":7000,"minimum":0}},{"name":"max_duration_s","in":"query","description":"Filter matches based on their duration in seconds (up to 7000s).","required":false,"schema":{"type":["integer","null"],"format":"int64","maximum":7000,"minimum":0}},{"name":"min_networth","in":"query","description":"Filter players based on their net worth.","required":false,"schema":{"type":["integer","null"],"format":"int64","minimum":0}},{"name":"max_networth","in":"query","description":"Filter players based on their net worth.","required":false,"schema":{"type":["integer","null"],"format":"int64","minimum":0}},{"name":"min_average_badge","in":"query","description":"Filter matches based on the average badge level (0-116) of *both* teams involved. See more: <https://assets.deadlock-api.com/v2/ranks>","required":false,"schema":{"type":["integer","null"],"format":"int32","maximum":116,"minimum":0}},{"name":"max_average_badge","in":"query","description":"Filter matches based on the average badge level (0-116) of *both* teams involved. See more: <https://assets.deadlock-api.com/v2/ranks>","required":false,"schema":{"type":["integer","null"],"format":"int32","maximum":116,"minimum":0}},{"name":"min_match_id","in":"query","description":"Filter matches based on their ID.","required":false,"schema":{"type":["integer","null"],"format":"int64","minimum":0}},{"name":"max_match_id","in":"query","description":"Filter matches based on their ID.","required":false,"schema":{"type":["integer","null"],"format":"int64","minimum":0}},{"name":"start","in":"query","description":"The offset to start fetching players from.","required":false,"schema":{"type":["integer","null"],"format":"int32","minimum":0}},{"name":"limit","in":"query","description":"The maximum number of players to fetch.","required":false,"schema":{"type":["integer","null"],"format":"int32","default":"100","maximum":10000,"minimum":1}},{"name":"account_ids","in":"query","description":"Comma separated list of account ids to include","required":false,"schema":{"type":["array","null"],"items":{"type":"integer","format":"int32","minimum":0}}}],"responses":{"200":{"description":"Player Scoreboard","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Entry"}}}}},"400":{"description":"Provided parameters are invalid."},"500":{"description":"Failed to fetch player scoreboard"}}}},"/v1/builds":{"get":{"tags":["Builds"],"summary":"Search","description":"\nSearch for builds based on various criteria.\n\n### Rate Limits:\n| Type | Limit |\n| ---- | ----- |\n| IP | 100req/s |\n| Key | - |\n| Global | - |\n    ","operationId":"search_builds","parameters":[{"name":"min_unix_timestamp","in":"query","description":"Filter builds based on their `last_updated` time (Unix timestamp).","required":false,"schema":{"type":"integer","format":"int64"},"style":"form"},{"name":"max_unix_timestamp","in":"query","description":"Filter builds based on their `last_updated` time (Unix timestamp).","required":false,"schema":{"type":"integer","format":"int64"},"style":"form"},{"name":"min_published_unix_timestamp","in":"query","description":"Filter builds based on their published time (Unix timestamp).","required":false,"schema":{"type":"integer","format":"int64"},"style":"form"},{"name":"max_published_unix_timestamp","in":"query","description":"Filter builds based on their published time (Unix timestamp).","required":false,"schema":{"type":"integer","format":"int64"},"style":"form"},{"name":"sort_by","in":"query","description":"The field to sort the builds by.","required":false,"schema":{"type":"string","enum":["weekly_favorites","favorites","ignores","reports","updated_at","published_at","version"]},"style":"form"},{"name":"start","in":"query","description":"The index of the first build to return.","required":false,"schema":{"type":"integer","format":"int32","minimum":0},"style":"form"},{"name":"limit","in":"query","description":"The maximum number of builds to return.","required":false,"schema":{"type":"integer","format":"int32","default":"100","minimum":0},"style":"form"},{"name":"sort_direction","in":"query","description":"The direction to sort the builds in.","required":false,"schema":{"type":"string","enum":["desc","asc"]},"style":"form"},{"name":"search_name","in":"query","description":"Search for builds with a name containing this string.","required":false,"schema":{"type":"string"},"style":"form"},{"name":"search_description","in":"query","description":"Search for builds with a description containing this string.","required":false,"schema":{"type":"string"},"style":"form"},{"name":"only_latest","in":"query","description":"Only return the latest version of each build.","required":false,"schema":{"type":"boolean"},"style":"form"},{"name":"language","in":"query","description":"Filter builds by language.","required":false,"schema":{"type":"integer","format":"int32","minimum":0},"style":"form"},{"name":"build_id","in":"query","description":"Filter builds by ID.","required":false,"schema":{"type":"integer","format":"int32","minimum":0},"style":"form"},{"name":"version","in":"query","description":"Filter builds by version.","required":false,"schema":{"type":"integer","format":"int32","minimum":0},"style":"form"},{"name":"hero_id","in":"query","description":"Filter builds by hero ID. See more: <https://assets.deadlock-api.com/v2/heroes>","required":false,"schema":{"type":"integer","format":"int32","minimum":0},"style":"form"},{"name":"tag","in":"query","description":"Filter builds by tag.","required":false,"schema":{"type":"integer","format":"int32","minimum":0},"style":"form"},{"name":"rollup_category","in":"query","description":"Filter builds by rollup category.","required":false,"schema":{"type":"integer","format":"int32","minimum":0},"style":"form"},{"name":"author_id","in":"query","description":"The author's `SteamID3`","required":false,"schema":{"type":"integer","format":"int32","minimum":0},"style":"form"}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Build"}}}}},"400":{"description":"Provided parameters are invalid."},"429":{"description":"Rate limit exceeded"},"500":{"description":"Internal server error"}}}},"/v1/commands/resolve":{"get":{"tags":["Commands"],"summary":"Resolve Command","description":"\n    Resolves a command and returns the resolved command.\n\n### Rate Limits:\n| Type | Limit |\n| ---- | ----- |\n| IP | 60req/60s |\n| Key | - |\n| Global | 300req/60s |\n    ","operationId":"command_resolve","parameters":[{"name":"region","in":"query","description":"The players region","required":false,"schema":{"type":"string","enum":["Europe","Asia","NAmerica","SAmerica","Oceania"]}},{"name":"account_id","in":"query","description":"The players `SteamID3`","required":true,"schema":{"type":"integer","format":"int32","minimum":0}},{"name":"template","in":"query","description":"The command template to resolve","required":false,"schema":{"type":"string"}},{"name":"hero_name","in":"query","description":"Hero name to check for hero specific stats","required":false,"schema":{"type":["string","null"]}}],"responses":{"200":{"description":"","content":{"text/plain":{"schema":{"type":"string"}}}},"400":{"description":"Provided parameters are invalid."}}}},"/v1/commands/variables/available":{"get":{"tags":["Commands"],"summary":"Available Variables","description":"\nReturns a list of available variables that can be used in the command endpoint.\n\n### Rate Limits:\n| Type | Limit |\n| ---- | ----- |\n| IP | 100req/s |\n| Key | - |\n| Global | - |\n    ","operationId":"available_variables","responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/VariableDescription"}}}}},"400":{"description":"Provided parameters are invalid."}}}},"/v1/commands/variables/resolve":{"get":{"tags":["Commands"],"summary":"Resolve Variables","description":"\nResolves variables and returns a map of variable name to resolved value.\n\n### Rate Limits:\n| Type | Limit |\n| ---- | ----- |\n| IP | 60req/min |\n| Key | - |\n| Global | 300req/min |\n    ","operationId":"variables_resolve","parameters":[{"name":"region","in":"query","required":false,"schema":{"type":"string","enum":["Europe","Asia","NAmerica","SAmerica","Oceania"]}},{"name":"account_id","in":"query","required":true,"schema":{"type":"integer","format":"int32","minimum":0}},{"name":"variables","in":"query","description":"Variables to resolve, separated by commas.","required":false,"schema":{"type":"string"}},{"name":"hero_name","in":"query","description":"Hero name to check for hero specific stats","required":false,"schema":{"type":["string","null"]}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","additionalProperties":{"type":"string"},"propertyNames":{"type":"string"}}}}},"400":{"description":"Provided parameters are invalid."}}}},"/v1/commands/widgets/versions":{"get":{"tags":["Commands"],"summary":"Widget Versions","description":"\nReturns a map of str->int of widget versions.\n\n### Rate Limits:\n| Type | Limit |\n| ---- | ----- |\n| IP | 100req/s |\n| Key | - |\n| Global | - |\n","operationId":"widget_versions","responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","additionalProperties":{"type":"integer","format":"int32"},"propertyNames":{"type":"string"}}}}},"400":{"description":"Provided parameters are invalid."}}}},"/v1/esports/ingest/match":{"post":{"tags":["E-Sports"],"summary":"Ingest","description":"\nTo use this Endpoint you need to have special permissions.\nPlease contact us if you organize E-Sports Matches and want to ingest them to us.\n\n### Rate Limits:\n| Type | Limit |\n| ---- | ----- |\n| IP | 1000req/h |\n| Key | - |\n| Global | 10000req/h |\n    ","operationId":"ingest_match","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ESportsMatch"}}},"required":true},"responses":{"200":{"description":""},"400":{"description":"Provided parameters are invalid."},"500":{"description":"Ingest failed"}}}},"/v1/esports/matches":{"get":{"tags":["E-Sports"],"summary":"List Matches","description":"\n### Rate Limits:\n| Type | Limit |\n| ---- | ----- |\n| IP | 100req/s |\n| Key | - |\n| Global | - |\n    ","operationId":"matches","responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/ESportsMatch"}}}}},"400":{"description":"Provided parameters are invalid."},"500":{"description":"Internal server error"}}}},"/v1/info":{"get":{"tags":["Info"],"summary":"API Info","description":"\nReturns information about the API.\n\n### Rate Limits:\n| Type | Limit |\n| ---- | ----- |\n| IP | 100req/s |\n| Key | - |\n| Global | - |\n    ","operationId":"info","responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/APIInfo"}}}},"500":{"description":"","content":{"text/plain":{"schema":{"type":"string"}}}}}}},"/v1/info/health":{"get":{"tags":["Info"],"summary":"Health Check","description":"\nChecks the health of the services.\n\n### Rate Limits:\n| Type | Limit |\n| ---- | ----- |\n| IP | 100req/s |\n| Key | - |\n| Global | - |\n    ","operationId":"health_check","responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Status"}}}},"500":{"description":"","content":{"text/plain":{"schema":{"type":"string"}}}}}}},"/v1/leaderboard/{region}":{"get":{"tags":["Leaderboard"],"summary":"Leaderboard","description":"\nReturns the leaderboard.\n\n### Rate Limits:\n| Type | Limit |\n| ---- | ----- |\n| IP | 100req/s |\n| Key | - |\n| Global | - |\n    ","operationId":"leaderboard","parameters":[{"name":"region","in":"path","description":"The region to fetch the leaderboard for.","required":true,"schema":{"type":"string","enum":["Europe","Asia","NAmerica","SAmerica","Oceania"]}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Leaderboard"}}}},"400":{"description":"Provided parameters are invalid."},"500":{"description":"Fetching or parsing the leaderboard failed"}}}},"/v1/leaderboard/{region}/raw":{"get":{"tags":["Leaderboard"],"summary":"Leaderboard as Protobuf","description":"\nReturns the leaderboard, serialized as protobuf message.\n\nYou have to decode the protobuf message.\n\nProtobuf definitions can be found here: [https://github.com/SteamDatabase/Protobufs](https://github.com/SteamDatabase/Protobufs)\n\nRelevant Protobuf Message:\n- CMsgClientToGcGetLeaderboardResponse\n\n### Rate Limits:\n| Type | Limit |\n| ---- | ----- |\n| IP | 100req/s |\n| Key | - |\n| Global | - |\n    ","operationId":"leaderboard_raw","parameters":[{"name":"region","in":"path","description":"The region to fetch the leaderboard for.","required":true,"schema":{"type":"string","enum":["Europe","Asia","NAmerica","SAmerica","Oceania"]}}],"responses":{"200":{"description":"","content":{"application/octet-stream":{"schema":{"type":"array","items":{"type":"integer","format":"int32","minimum":0}}}}},"400":{"description":"Provided parameters are invalid."},"500":{"description":"Fetching the leaderboard failed"}}}},"/v1/leaderboard/{region}/{hero_id}":{"get":{"tags":["Leaderboard"],"summary":"Hero Leaderboard","description":"\nReturns the leaderboard for a specific hero.\n\n### Rate Limits:\n| Type | Limit |\n| ---- | ----- |\n| IP | 100req/s |\n| Key | - |\n| Global | - |\n    ","operationId":"leaderboard_hero","parameters":[{"name":"region","in":"path","description":"The region to fetch the leaderboard for.","required":true,"schema":{"type":"string","enum":["Europe","Asia","NAmerica","SAmerica","Oceania"]}},{"name":"hero_id","in":"path","description":"The hero ID to fetch the leaderboard for. See more: <https://assets.deadlock-api.com/v2/heroes>","required":true,"schema":{"type":"integer","format":"int32","minimum":0}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Leaderboard"}}}},"400":{"description":"Provided parameters are invalid."},"500":{"description":"Fetching or parsing the hero leaderboard failed"}}}},"/v1/leaderboard/{region}/{hero_id}/raw":{"get":{"tags":["Leaderboard"],"summary":"Hero Leaderboard as Protobuf","description":"\nReturns the leaderboard for a specific hero, serialized as protobuf message.\n\nYou have to decode the protobuf message.\n\nProtobuf definitions can be found here: [https://github.com/SteamDatabase/Protobufs](https://github.com/SteamDatabase/Protobufs)\n\nRelevant Protobuf Message:\n- CMsgClientToGcGetLeaderboardResponse\n\n### Rate Limits:\n| Type | Limit |\n| ---- | ----- |\n| IP | 100req/s |\n| Key | - |\n| Global | - |\n    ","operationId":"leaderboard_hero_raw","parameters":[{"name":"region","in":"path","description":"The region to fetch the leaderboard for.","required":true,"schema":{"type":"string","enum":["Europe","Asia","NAmerica","SAmerica","Oceania"]}},{"name":"hero_id","in":"path","description":"The hero ID to fetch the leaderboard for. See more: <https://assets.deadlock-api.com/v2/heroes>","required":true,"schema":{"type":"integer","format":"int32","minimum":0}}],"responses":{"200":{"description":"","content":{"application/octet-stream":{"schema":{"type":"array","items":{"type":"integer","format":"int32","minimum":0}}}}},"400":{"description":"Provided parameters are invalid."},"500":{"description":"Fetching the hero leaderboard failed"}}}},"/v1/matches/active":{"get":{"tags":["Matches"],"summary":"Active","description":"\nReturns active matches that are currently being played.\n\nFetched from the watch tab in game, which is limited to the **top 200 matches**.\n\n### Rate Limits:\n| Type | Limit |\n| ---- | ----- |\n| IP | 100req/s |\n| Key | - |\n| Global | - |\n    ","operationId":"active_matches","parameters":[{"name":"account_id","in":"query","description":"The account ID to filter active matches by (`SteamID3`)","required":false,"deprecated":true,"schema":{"type":["integer","null"],"format":"int32","minimum":0}},{"name":"account_ids","in":"query","description":"Comma separated list of account ids to include","required":false,"schema":{"type":["array","null"],"items":{"type":"integer","format":"int32","minimum":0}}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/ActiveMatch"}}}}},"400":{"description":"Provided parameters are invalid."},"500":{"description":"Fetching or parsing active matches failed"}}}},"/v1/matches/active/raw":{"get":{"tags":["Matches"],"summary":"Active as Protobuf","description":"\nReturns active matches that are currently being played, serialized as protobuf message.\n\nFetched from the watch tab in game, which is limited to the **top 200 matches**.\n\nYou have to decode the protobuf message.\n\nProtobuf definitions can be found here: [https://github.com/SteamDatabase/Protobufs](https://github.com/SteamDatabase/Protobufs)\n\nRelevant Protobuf Message:\n- CMsgClientToGcGetActiveMatchesResponse\n\n### Rate Limits:\n| Type | Limit |\n| ---- | ----- |\n| IP | 100req/s |\n| Key | - |\n| Global | - |\n    ","operationId":"active_matches_raw","responses":{"200":{"description":"","content":{"application/octet-stream":{"schema":{"type":"array","items":{"type":"integer","format":"int32","minimum":0}}}}},"500":{"description":"Fetching active matches failed"}}}},"/v1/matches/badge-distribution":{"get":{"tags":["Matches"],"summary":"Badge Distribution","description":"\nThis endpoint returns the player badge distribution.\n\n### Rate Limits:\n| Type | Limit |\n| ---- | ----- |\n| IP | 100req/s |\n| Key | - |\n| Global | - |\n    ","operationId":"badge_distribution","parameters":[{"name":"min_unix_timestamp","in":"query","description":"Filter matches based on their start time (Unix timestamp).","required":false,"schema":{"type":["integer","null"],"format":"int64"}},{"name":"max_unix_timestamp","in":"query","description":"Filter matches based on their start time (Unix timestamp).","required":false,"schema":{"type":["integer","null"],"format":"int64"}},{"name":"min_match_id","in":"query","description":"Filter matches based on their ID.","required":false,"schema":{"type":["integer","null"],"format":"int64","minimum":0}},{"name":"max_match_id","in":"query","description":"Filter matches based on their ID.","required":false,"schema":{"type":["integer","null"],"format":"int64","minimum":0}}],"responses":{"200":{"description":"Badge Distribution","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/BadgeDistribution"}}}}},"400":{"description":"Provided parameters are invalid."},"500":{"description":"Failed to fetch badge distribution"}}}},"/v1/matches/custom/create":{"post":{"tags":["Custom Matches"],"summary":"Create Match","description":"\nThis endpoint creates a custom match using a bot account.\n\n**Process:**\n1. A party is created with your provided settings.\n2. The system waits for the party code to be generated.\n3. The party code is returned in the response.\n4. The bot switches to spectator mode.\n5. The bot marks itself as ready.\n6. You and other players join, ready up, and start the match.\n\n**Callbacks:**\nIf a callback URL is provided, POST requests will be sent to it:\n- **settings:** When lobby settings change, a POST is sent to `{callback_url}/settings` with the `CsoCitadelParty` protobuf message as JSON.\n- **match start:** When the match starts, a POST is sent to `{callback_url}` with the match ID.\n\n_Protobuf definitions: [https://github.com/SteamDatabase/Protobufs](https://github.com/SteamDatabase/Protobufs)_\n\n**Note:**\nThe bot will leave the match 15 minutes after creation, regardless of match state.\n\n### Rate Limits:\n| Type | Limit |\n| ---- | ----- |\n| IP | API-Key ONLY |\n| Key | 100req/30min |\n| Global | 1000req/h |\n","operationId":"create_custom","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateCustomRequest"}}},"required":true},"responses":{"200":{"description":"Successfully fetched custom match id.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateCustomResponse"}}}},"400":{"description":"Provided parameters are invalid."},"429":{"description":"Rate limit exceeded"},"500":{"description":"Creating custom match failed"}}}},"/v1/matches/custom/{party_id}/match-id":{"get":{"tags":["Custom Matches"],"summary":"Get Match ID","description":"\nThis endpoint allows you to get the match id of a custom match.\n\n### Rate Limits:\n| Type | Limit |\n| ---- | ----- |\n| IP | 100req/s |\n| Key | - |\n| Global | - |\n","operationId":"get_custom","parameters":[{"name":"party_id","in":"path","required":true,"schema":{"type":"integer","format":"int64","minimum":0}}],"responses":{"200":{"description":"Successfully fetched custom match id.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GetCustomMatchIdResponse"}}}},"400":{"description":"Provided parameters are invalid."},"429":{"description":"Rate limit exceeded"},"500":{"description":"Fetch Custom Match ID failed"}}}},"/v1/matches/metadata":{"get":{"tags":["Matches"],"summary":"Bulk Metadata","description":"\nThis endpoints lets you fetch multiple match metadata at once. The response is a JSON array of match metadata.\n\n### Rate Limits:\n| Type | Limit |\n| ---- | ----- |\n| IP | 4req/s |\n| Key | - |\n| Global | 10req/s |\n    ","operationId":"bulk_metadata","parameters":[{"name":"include_info","in":"query","description":"Include match info in the response.","required":false,"schema":{"type":"boolean","default":"true"}},{"name":"include_objectives","in":"query","description":"Include objectives in the response.","required":false,"schema":{"type":"boolean"}},{"name":"include_mid_boss","in":"query","description":"Include midboss in the response.","required":false,"schema":{"type":"boolean"}},{"name":"include_player_info","in":"query","description":"Include player info in the response.","required":false,"schema":{"type":"boolean"}},{"name":"include_player_items","in":"query","description":"Include player items in the response.","required":false,"schema":{"type":"boolean"}},{"name":"include_player_stats","in":"query","description":"Include player stats in the response.","required":false,"schema":{"type":"boolean"}},{"name":"include_player_death_details","in":"query","description":"Include player death details in the response.","required":false,"schema":{"type":"boolean"}},{"name":"match_ids","in":"query","description":"Comma separated list of match ids, limited by `limit`","required":false,"schema":{"type":["array","null"],"items":{"type":"integer","format":"int64","minimum":0}}},{"name":"min_unix_timestamp","in":"query","description":"Filter matches based on their start time (Unix timestamp).","required":false,"schema":{"type":["integer","null"],"format":"int64"}},{"name":"max_unix_timestamp","in":"query","description":"Filter matches based on their start time (Unix timestamp).","required":false,"schema":{"type":["integer","null"],"format":"int64"}},{"name":"min_duration_s","in":"query","description":"Filter matches based on their duration in seconds (up to 7000s).","required":false,"schema":{"type":["integer","null"],"format":"int64","maximum":7000,"minimum":0}},{"name":"max_duration_s","in":"query","description":"Filter matches based on their duration in seconds (up to 7000s).","required":false,"schema":{"type":["integer","null"],"format":"int64","maximum":7000,"minimum":0}},{"name":"min_average_badge","in":"query","description":"Filter matches based on the average badge level (0-116) of *both* teams involved. See more: <https://assets.deadlock-api.com/v2/ranks>","required":false,"schema":{"type":["integer","null"],"format":"int32","maximum":116,"minimum":0}},{"name":"max_average_badge","in":"query","description":"Filter matches based on the average badge level (0-116) of *both* teams involved. See more: <https://assets.deadlock-api.com/v2/ranks>","required":false,"schema":{"type":["integer","null"],"format":"int32","maximum":116,"minimum":0}},{"name":"min_match_id","in":"query","description":"Filter matches based on their ID.","required":false,"schema":{"type":["integer","null"],"format":"int64","minimum":0}},{"name":"max_match_id","in":"query","description":"Filter matches based on their ID.","required":false,"schema":{"type":["integer","null"],"format":"int64","minimum":0}},{"name":"is_high_skill_range_parties","in":"query","description":"Filter matches based on whether they are in the high skill range.","required":false,"schema":{"type":["boolean","null"]}},{"name":"is_low_pri_pool","in":"query","description":"Filter matches based on whether they are in the low priority pool.","required":false,"schema":{"type":["boolean","null"]}},{"name":"is_new_player_pool","in":"query","description":"Filter matches based on whether they are in the new player pool.","required":false,"schema":{"type":["boolean","null"]}},{"name":"account_ids","in":"query","description":"Filter matches by account IDs of players that participated in the match.","required":false,"schema":{"type":["array","null"],"items":{"type":"integer","format":"int32","minimum":0}}},{"name":"order_by","in":"query","description":"The field to order the results by.","required":false,"schema":{"type":"string","enum":["match_id","start_time"]}},{"name":"order_direction","in":"query","description":"The direction to order the results by.","required":false,"schema":{"type":"string","enum":["desc","asc"]}},{"name":"limit","in":"query","description":"The maximum number of matches to return.","required":false,"schema":{"type":"integer","format":"int32","default":1000,"maximum":10000,"minimum":1}}],"responses":{"200":{"description":"","content":{"application/octet-stream":{"schema":{"type":"array","items":{"type":"integer","format":"int32","minimum":0}}}}},"400":{"description":"Provided parameters are invalid."},"429":{"description":"Rate limit exceeded"}}}},"/v1/matches/recently-fetched":{"get":{"tags":["Matches"],"summary":"Recently Fetched","description":"\nThis endpoint returns a list of match ids that have been fetched within the last 10 minutes.\n\n### Rate Limits:\n| Type | Limit |\n| ---- | ----- |\n| IP | 100req/s |\n| Key | - |\n| Global | - |\n    ","operationId":"recently_fetched","responses":{"200":{"description":"Recently fetched match info","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/ClickhouseMatchInfo"}}}}},"500":{"description":"Failed to fetch recently fetched matches"}}}},"/v1/matches/salts":{"post":{"tags":["Internal"],"summary":"Match Salts Ingest","description":"\nYou can use this endpoint to help us collecting data.\n\nThe endpoint accepts a list of MatchSalts objects, which contain the following fields:\n\n- `match_id`: The match ID\n- `cluster_id`: The cluster ID\n- `metadata_salt`: The metadata salt\n- `replay_salt`: The replay salt\n- `username`: The username of the person who submitted the match\n\n### Rate Limits:\n| Type | Limit |\n| ---- | ----- |\n| IP | 100req/s |\n| Key | - |\n| Global | - |\n    ","operationId":"ingest_salts","requestBody":{"content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/ClickhouseSalts"}}}},"required":true},"responses":{"200":{"description":""},"400":{"description":"Provided parameters are invalid or the salt check failed."},"500":{"description":"Ingest failed"}}}},"/v1/matches/{match_id}/live/url":{"get":{"tags":["Matches"],"summary":"Live Broadcast URL","description":"\nThis endpoints spectates a match and returns the live URL to be used in any demofile broadcast parser.\n\nExample Parsers:\n- [Demofile-Net](https://github.com/saul/demofile-net)\n- [Haste](https://github.com/blukai/haste/)\n\n### Rate Limits:\n| Type | Limit |\n| ---- | ----- |\n| IP | 10req/30mins |\n| Key | 60req/min |\n| Global | 100req/10s |\n    ","operationId":"url","parameters":[{"name":"match_id","in":"path","description":"The match ID","required":true,"schema":{"type":"integer","format":"int64","minimum":0}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/MatchSpectateResponse"}}}},"400":{"description":"Provided parameters are invalid."},"429":{"description":"Rate limit exceeded"},"500":{"description":"Spectating match failed"}}}},"/v1/matches/{match_id}/metadata":{"get":{"tags":["Matches"],"summary":"Metadata","description":"\nThis endpoint returns the match metadata for the given `match_id` parsed into JSON.\n\nProtobuf definitions can be found here: [https://github.com/SteamDatabase/Protobufs](https://github.com/SteamDatabase/Protobufs)\n\nRelevant Protobuf Messages:\n- CMsgMatchMetaData\n- CMsgMatchMetaDataContents\n\n### Rate Limits:\n| Type | Limit |\n| ---- | ----- |\n| IP | From Cache: 100req/s<br>From S3: 100req/10s<br>From Steam: 10req/30mins |\n| Key | From Cache: 100req/s<br>From S3: 100req/s<br>From Steam: 10req/min |\n| Global | From Cache: 100req/s<br>From S3: 700req/s<br>From Steam: 10req/10s |\n    ","operationId":"metadata","parameters":[{"name":"match_id","in":"path","description":"The match ID","required":true,"schema":{"type":"integer","format":"int64","minimum":0}},{"name":"is_custom","in":"query","required":false,"schema":{"type":["boolean","null"]}}],"responses":{"200":{"description":"Match metadata, see protobuf type: CMsgMatchMetaDataContents"},"400":{"description":"Provided parameters are invalid."},"404":{"description":"Match metadata not found"},"429":{"description":"Rate limit exceeded"},"500":{"description":"Fetching or parsing match metadata failed"}}}},"/v1/matches/{match_id}/metadata/raw":{"get":{"tags":["Matches"],"summary":"Metadata as Protobuf","description":"\nThis endpoints returns the raw .meta.bz2 file for the given `match_id`.\n\nYou have to decompress it and decode the protobuf message.\n\nProtobuf definitions can be found here: [https://github.com/SteamDatabase/Protobufs](https://github.com/SteamDatabase/Protobufs)\n\nRelevant Protobuf Messages:\n- CMsgMatchMetaData\n- CMsgMatchMetaDataContents\n\n### Rate Limits:\n| Type | Limit |\n| ---- | ----- |\n| IP | From Cache: 100req/s<br>From S3: 100req/10s<br>From Steam: 10req/30mins |\n| Key | From Cache: 100req/s<br>From S3: 100req/s<br>From Steam: 10req/min |\n| Global | From Cache: 100req/s<br>From S3: 700req/s<br>From Steam: 10req/10s |\n    ","operationId":"metadata_raw","parameters":[{"name":"match_id","in":"path","description":"The match ID","required":true,"schema":{"type":"integer","format":"int64","minimum":0}},{"name":"is_custom","in":"query","required":false,"schema":{"type":["boolean","null"]}}],"responses":{"200":{"description":"","content":{"application/octet-stream":{"schema":{"type":"array","items":{"type":"integer","format":"int32","minimum":0}}}}},"400":{"description":"Provided parameters are invalid."},"404":{"description":"Match metadata not found"},"429":{"description":"Rate limit exceeded"},"500":{"description":"Fetching match metadata failed"}}}},"/v1/matches/{match_id}/salts":{"get":{"tags":["Matches"],"summary":"Salts","description":"\nThis endpoints returns salts that can be used to fetch metadata and demofile for a match.\n\n**Note:** We currently fetch many matches without salts, so for these matches we do not have salts stored.\n\n### Rate Limits:\n| Type | Limit |\n| ---- | ----- |\n| IP | From DB: 100req/s<br>From Steam: 10req/30mins |\n| Key | From DB: -<br>From Steam: 10req/min |\n| Global | From DB: -<br>From Steam: 10req/10s |\n    ","operationId":"salts","parameters":[{"name":"match_id","in":"path","description":"The match ID","required":true,"schema":{"type":"integer","format":"int64","minimum":0}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/MatchSaltsResponse"}}}},"400":{"description":"Provided parameters are invalid."},"429":{"description":"Rate limit exceeded"},"500":{"description":"Fetching match salts failed"}}}},"/v1/patches":{"get":{"tags":["Patches"],"summary":"Notes","description":"\nReturns the parsed result of the RSS Feed from the official Forum.\n\nRSS-Feed: https://forums.playdeadlock.com/forums/changelog.10/index.rss\n\n### Rate Limits:\n| Type | Limit |\n| ---- | ----- |\n| IP | 100req/s |\n| Key | - |\n| Global | - |\n    ","operationId":"feed","responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Patch"}}}}},"500":{"description":"Fetching or parsing the RSS-Feed failed"}}}},"/v1/patches/big-days":{"get":{"tags":["Patches"],"summary":"Big Days","description":"\nReturns a list of dates where Deadlock's \"big\" patch days were, usually bi-weekly.\nThe exact date is the time when the announcement forum post was published.\n\nThis list is manually maintained, and so new patch dates may be delayed by a few hours.\n\n### Rate Limits:\n| Type | Limit |\n| ---- | ----- |\n| IP | 100req/s |\n| Key | - |\n| Global | - |\n    ","operationId":"big_patch_days","responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"array","items":{"type":"string"}}}}}}}},"/v1/players/hero-stats":{"get":{"tags":["Players"],"summary":"Hero Stats","description":"\nThis endpoint returns statistics for each hero played by a given player account.\n\n### Rate Limits:\n| Type | Limit |\n| ---- | ----- |\n| IP | 100req/s |\n| Key | - |\n| Global | - |\n    ","operationId":"player_hero_stats","parameters":[{"name":"account_ids","in":"query","description":"Comma separated list of account ids, Account IDs are in `SteamID3` format.","required":true,"schema":{"type":"array","items":{"type":"integer","format":"int32","minimum":0},"maxItems":100,"minItems":1}},{"name":"min_unix_timestamp","in":"query","description":"Filter matches based on their start time (Unix timestamp).","required":false,"schema":{"type":["integer","null"],"format":"int64"}},{"name":"max_unix_timestamp","in":"query","description":"Filter matches based on their start time (Unix timestamp).","required":false,"schema":{"type":["integer","null"],"format":"int64"}},{"name":"min_duration_s","in":"query","description":"Filter matches based on their duration in seconds (up to 7000s).","required":false,"schema":{"type":["integer","null"],"format":"int64","maximum":7000,"minimum":0}},{"name":"max_duration_s","in":"query","description":"Filter matches based on their duration in seconds (up to 7000s).","required":false,"schema":{"type":["integer","null"],"format":"int64","maximum":7000,"minimum":0}},{"name":"min_networth","in":"query","description":"Filter players based on their net worth.","required":false,"schema":{"type":["integer","null"],"format":"int64","minimum":0}},{"name":"max_networth","in":"query","description":"Filter players based on their net worth.","required":false,"schema":{"type":["integer","null"],"format":"int64","minimum":0}},{"name":"min_average_badge","in":"query","description":"Filter matches based on the average badge level (0-116) of *both* teams involved. See more: <https://assets.deadlock-api.com/v2/ranks>","required":false,"schema":{"type":["integer","null"],"format":"int32","maximum":116,"minimum":0}},{"name":"max_average_badge","in":"query","description":"Filter matches based on the average badge level (0-116) of *both* teams involved. See more: <https://assets.deadlock-api.com/v2/ranks>","required":false,"schema":{"type":["integer","null"],"format":"int32","maximum":116,"minimum":0}},{"name":"min_match_id","in":"query","description":"Filter matches based on their ID.","required":false,"schema":{"type":["integer","null"],"format":"int64","minimum":0}},{"name":"max_match_id","in":"query","description":"Filter matches based on their ID.","required":false,"schema":{"type":["integer","null"],"format":"int64","minimum":0}}],"responses":{"200":{"description":"Hero Stats","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/HeroStats"}}}}},"400":{"description":"Provided parameters are invalid."},"500":{"description":"Failed to fetch hero stats"}}}},"/v1/players/mmr":{"get":{"tags":["MMR"],"summary":"MMR","description":"Batch Player MMR","operationId":"mmr","parameters":[{"name":"account_ids","in":"query","description":"Comma separated list of account ids, Account IDs are in `SteamID3` format.","required":true,"schema":{"type":"array","items":{"type":"integer","format":"int32","minimum":0},"maxItems":1000,"minItems":1}},{"name":"max_match_id","in":"query","description":"Filter matches based on their ID.","required":false,"schema":{"type":["integer","null"],"format":"int64","minimum":0}}],"responses":{"200":{"description":"MMR","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/MMRHistory"}}}}},"400":{"description":"Provided parameters are invalid."},"500":{"description":"Failed to fetch mmr"}}}},"/v1/players/mmr/{hero_id}":{"get":{"tags":["MMR"],"summary":"Hero MMR","description":"Batch Player Hero MMR","operationId":"hero_mmr","parameters":[{"name":"account_ids","in":"query","description":"Comma separated list of account ids, Account IDs are in `SteamID3` format.","required":true,"schema":{"type":"array","items":{"type":"integer","format":"int32","minimum":0},"maxItems":1000,"minItems":1}},{"name":"max_match_id","in":"query","description":"Filter matches based on their ID.","required":false,"schema":{"type":["integer","null"],"format":"int64","minimum":0}},{"name":"hero_id","in":"path","description":"The hero ID to fetch the MMR history for. See more: <https://assets.deadlock-api.com/v2/heroes>","required":true,"schema":{"type":"integer","format":"int32","minimum":0}}],"responses":{"200":{"description":"Hero MMR","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/MMRHistory"}}}}},"400":{"description":"Provided parameters are invalid."},"500":{"description":"Failed to fetch hero mmr"}}}},"/v1/players/steam":{"get":{"tags":["Players"],"summary":"Batch Steam Profile","description":"\nThis endpoint returns Steam profiles of players.\n\nSee: https://developer.valvesoftware.com/wiki/Steam_Web_API#GetPlayerSummaries_(v0002)\n\n### Rate Limits:\n| Type | Limit |\n| ---- | ----- |\n| IP | 100req/s |\n| Key | - |\n| Global | - |\n    ","operationId":"steam","parameters":[{"name":"account_ids","in":"query","description":"Comma separated list of account ids, Account IDs are in `SteamID3` format.","required":true,"schema":{"type":"array","items":{"type":"integer","format":"int64","minimum":0},"maxItems":1000,"minItems":1}}],"responses":{"200":{"description":"Steam Profiles","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/SteamProfile"}}}}},"400":{"description":"Provided parameters are invalid."},"404":{"description":"No Steam profile found."},"500":{"description":"Failed to fetch steam profiles."}}}},"/v1/players/steam-search":{"get":{"tags":["Players"],"summary":"Steam Profile Search","description":"\nThis endpoint lets you search for Steam profiles by account_id or personaname.\n\nSee: https://developer.valvesoftware.com/wiki/Steam_Web_API#GetPlayerSummaries_(v0002)\n\n### Rate Limits:\n| Type | Limit |\n| ---- | ----- |\n| IP | 100req/s |\n| Key | - |\n| Global | - |\n    ","operationId":"steam_search","parameters":[{"name":"search_query","in":"query","description":"Search query for Steam profiles.","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Steam Profile Search","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/SteamProfile"}}}}},"400":{"description":"Provided parameters are invalid."},"404":{"description":"No Steam profiles found."},"500":{"description":"Failed to fetch steam profiles."}}}},"/v1/players/{account_id}/card":{"get":{"tags":["Players"],"summary":"Card","description":"\nThis endpoint returns the player card for the given `account_id`.\n\nYou have to be friend with one of the bots to use this endpoint.\nOn first use this endpoint will return an error with a list of invite links to add the bot as friend.\nFrom then on you can use this endpoint.\n\nProtobuf definitions can be found here: [https://github.com/SteamDatabase/Protobufs](https://github.com/SteamDatabase/Protobufs)\n\nRelevant Protobuf Messages:\n- CMsgClientToGcGetProfileCard\n- CMsgCitadelProfileCard\n\n### Rate Limits:\n| Type | Limit |\n| ---- | ----- |\n| IP | 5req/min |\n| Key | 20req/min & 800req/h |\n| Global | 200req/min |\n    ","operationId":"card","parameters":[{"name":"account_id","in":"path","description":"The players `SteamID3`","required":true,"schema":{"type":"integer","format":"int32","minimum":0}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/PlayerCard"}}}}},"400":{"description":"Provided parameters are invalid."},"429":{"description":"Rate limit exceeded"},"500":{"description":"Fetching match history failed"}}}},"/v1/players/{account_id}/enemy-stats":{"get":{"tags":["Players"],"summary":"Enemy Stats","description":"\nThis endpoint returns the enemy stats.\n\n### Rate Limits:\n| Type | Limit |\n| ---- | ----- |\n| IP | 100req/s |\n| Key | - |\n| Global | - |\n    ","operationId":"enemy_stats","parameters":[{"name":"account_id","in":"path","description":"The players `SteamID3`","required":true,"schema":{"type":"integer","format":"int32","minimum":0}},{"name":"min_unix_timestamp","in":"query","description":"Filter matches based on their start time (Unix timestamp).","required":false,"schema":{"type":["integer","null"],"format":"int64"}},{"name":"max_unix_timestamp","in":"query","description":"Filter matches based on their start time (Unix timestamp).","required":false,"schema":{"type":["integer","null"],"format":"int64"}},{"name":"min_duration_s","in":"query","description":"Filter matches based on their duration in seconds (up to 7000s).","required":false,"schema":{"type":["integer","null"],"format":"int64","maximum":7000,"minimum":0}},{"name":"max_duration_s","in":"query","description":"Filter matches based on their duration in seconds (up to 7000s).","required":false,"schema":{"type":["integer","null"],"format":"int64","maximum":7000,"minimum":0}},{"name":"min_average_badge","in":"query","description":"Filter matches based on the average badge level (0-116) of *both* teams involved. See more: <https://assets.deadlock-api.com/v2/ranks>","required":false,"schema":{"type":["integer","null"],"format":"int32","maximum":116,"minimum":0}},{"name":"max_average_badge","in":"query","description":"Filter matches based on the average badge level (0-116) of *both* teams involved. See more: <https://assets.deadlock-api.com/v2/ranks>","required":false,"schema":{"type":["integer","null"],"format":"int32","maximum":116,"minimum":0}},{"name":"min_match_id","in":"query","description":"Filter matches based on their ID.","required":false,"schema":{"type":["integer","null"],"format":"int64","minimum":0}},{"name":"max_match_id","in":"query","description":"Filter matches based on their ID.","required":false,"schema":{"type":["integer","null"],"format":"int64","minimum":0}},{"name":"min_matches_played","in":"query","description":"Filter based on the number of matches played.","required":false,"schema":{"type":["integer","null"],"format":"int64","minimum":0}},{"name":"max_matches_played","in":"query","description":"Filter based on the number of matches played.","required":false,"schema":{"type":["integer","null"],"format":"int64","minimum":0}}],"responses":{"200":{"description":"Enemy Stats","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/EnemyStats"}}}}},"400":{"description":"Provided parameters are invalid."},"500":{"description":"Failed to fetch enemy stats"}}}},"/v1/players/{account_id}/match-history":{"get":{"tags":["Players"],"summary":"Match History","description":"\nThis endpoint returns the player match history for the given `account_id`.\n\nThe player match history is a combination of the data from **Steam** and **ClickHouse**, so you always get the most up-to-date data and full history.\n\nProtobuf definitions can be found here: [https://github.com/SteamDatabase/Protobufs](https://github.com/SteamDatabase/Protobufs)\n\nRelevant Protobuf Messages:\n- CMsgClientToGcGetMatchHistory\n- CMsgClientToGcGetMatchHistoryResponse\n\n### Rate Limits:\n| Type | Limit |\n| ---- | ----- |\n| IP | 5req/min<br>With `only_stored_history=true`: 100req/s<br>With `force_refetch=true`: 5req/h |\n| Key | 50req/min & 1000req/h<br>With `only_stored_history=true`: -<br>With `force_refetch=true`: 5req/h |\n| Global | 2000req/h<br>With `only_stored_history=true`: -<br>With `force_refetch=true`: 10req/h |\n    ","operationId":"match_history","parameters":[{"name":"account_id","in":"path","description":"The players `SteamID3`","required":true,"schema":{"type":"integer","format":"int32","minimum":0}},{"name":"force_refetch","in":"query","description":"Refetch the match history from Steam, even if it is already cached in `ClickHouse`.\nOnly use this if you are sure that the data in `ClickHouse` is outdated.\nEnabling this flag results in a strict rate limit.","required":false,"schema":{"type":"boolean"}},{"name":"only_stored_history","in":"query","description":"Return only the already stored match history from `ClickHouse`.\nThere is no rate limit for this option, so if you need a lot of data, you can use this option.\nThis option is not compatible with `force_refetch`.","required":false,"schema":{"type":"boolean"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/PlayerMatchHistoryEntry"}}}}},"400":{"description":"Provided parameters are invalid."},"429":{"description":"Rate limit exceeded"},"500":{"description":"Fetching player match history failed"}}}},"/v1/players/{account_id}/mate-stats":{"get":{"tags":["Players"],"summary":"Mate Stats","description":"\nThis endpoint returns the mate stats.\n\n### Rate Limits:\n| Type | Limit |\n| ---- | ----- |\n| IP | 100req/s |\n| Key | - |\n| Global | - |\n    ","operationId":"mate_stats","parameters":[{"name":"account_id","in":"path","description":"The players `SteamID3`","required":true,"schema":{"type":"integer","format":"int32","minimum":0}},{"name":"min_unix_timestamp","in":"query","description":"Filter matches based on their start time (Unix timestamp).","required":false,"schema":{"type":["integer","null"],"format":"int64"}},{"name":"max_unix_timestamp","in":"query","description":"Filter matches based on their start time (Unix timestamp).","required":false,"schema":{"type":["integer","null"],"format":"int64"}},{"name":"min_duration_s","in":"query","description":"Filter matches based on their duration in seconds (up to 7000s).","required":false,"schema":{"type":["integer","null"],"format":"int64","maximum":7000,"minimum":0}},{"name":"max_duration_s","in":"query","description":"Filter matches based on their duration in seconds (up to 7000s).","required":false,"schema":{"type":["integer","null"],"format":"int64","maximum":7000,"minimum":0}},{"name":"min_average_badge","in":"query","description":"Filter matches based on the average badge level (0-116) of *both* teams involved. See more: <https://assets.deadlock-api.com/v2/ranks>","required":false,"schema":{"type":["integer","null"],"format":"int32","maximum":116,"minimum":0}},{"name":"max_average_badge","in":"query","description":"Filter matches based on the average badge level (0-116) of *both* teams involved. See more: <https://assets.deadlock-api.com/v2/ranks>","required":false,"schema":{"type":["integer","null"],"format":"int32","maximum":116,"minimum":0}},{"name":"min_match_id","in":"query","description":"Filter matches based on their ID.","required":false,"schema":{"type":["integer","null"],"format":"int64","minimum":0}},{"name":"max_match_id","in":"query","description":"Filter matches based on their ID.","required":false,"schema":{"type":["integer","null"],"format":"int64","minimum":0}},{"name":"min_matches_played","in":"query","description":"Filter based on the number of matches played.","required":false,"schema":{"type":["integer","null"],"format":"int64","minimum":0}},{"name":"max_matches_played","in":"query","description":"Filter based on the number of matches played.","required":false,"schema":{"type":["integer","null"],"format":"int64","minimum":0}},{"name":"same_party","in":"query","description":"Filter based on whether the mates were on the same party.","required":false,"schema":{"type":"boolean","default":true}}],"responses":{"200":{"description":"Mate Stats","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/MateStats"}}}}},"400":{"description":"Provided parameters are invalid."},"500":{"description":"Failed to fetch mate stats"}}}},"/v1/players/{account_id}/mmr-history":{"get":{"tags":["MMR"],"summary":"MMR History","description":"Player MMR History","operationId":"mmr_history","parameters":[{"name":"account_id","in":"path","description":"The players `SteamID3`","required":true,"schema":{"type":"integer","format":"int32","minimum":0}}],"responses":{"200":{"description":"MMR History","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/MMRHistory"}}}}},"400":{"description":"Provided parameters are invalid."},"500":{"description":"Failed to fetch mmr history"}}}},"/v1/players/{account_id}/mmr-history/{hero_id}":{"get":{"tags":["MMR"],"summary":"Hero MMR History","description":"Player Hero MMR History","operationId":"hero_mmr_history","parameters":[{"name":"account_id","in":"path","description":"The players `SteamID3`","required":true,"schema":{"type":"integer","format":"int32","minimum":0}},{"name":"hero_id","in":"path","description":"The hero ID to fetch the MMR history for. See more: <https://assets.deadlock-api.com/v2/heroes>","required":true,"schema":{"type":"integer","format":"int32","minimum":0}}],"responses":{"200":{"description":"Hero MMR History","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/MMRHistory"}}}}},"400":{"description":"Provided parameters are invalid."},"500":{"description":"Failed to fetch hero mmr history"}}}},"/v1/players/{account_id}/party-stats":{"get":{"tags":["Players"],"summary":"Party Stats","description":"\nThis endpoint returns the party stats.\n\n### Rate Limits:\n| Type | Limit |\n| ---- | ----- |\n| IP | 100req/s |\n| Key | - |\n| Global | - |\n    ","operationId":"party_stats","parameters":[{"name":"account_id","in":"path","description":"The players `SteamID3`","required":true,"schema":{"type":"integer","format":"int32","minimum":0}},{"name":"min_unix_timestamp","in":"query","description":"Filter matches based on their start time (Unix timestamp).","required":false,"schema":{"type":["integer","null"],"format":"int64"}},{"name":"max_unix_timestamp","in":"query","description":"Filter matches based on their start time (Unix timestamp).","required":false,"schema":{"type":["integer","null"],"format":"int64"}},{"name":"min_duration_s","in":"query","description":"Filter matches based on their duration in seconds (up to 7000s).","required":false,"schema":{"type":["integer","null"],"format":"int64","maximum":7000,"minimum":0}},{"name":"max_duration_s","in":"query","description":"Filter matches based on their duration in seconds (up to 7000s).","required":false,"schema":{"type":["integer","null"],"format":"int64","maximum":7000,"minimum":0}},{"name":"min_average_badge","in":"query","description":"Filter matches based on the average badge level (0-116) of *both* teams involved. See more: <https://assets.deadlock-api.com/v2/ranks>","required":false,"schema":{"type":["integer","null"],"format":"int32","maximum":116,"minimum":0}},{"name":"max_average_badge","in":"query","description":"Filter matches based on the average badge level (0-116) of *both* teams involved. See more: <https://assets.deadlock-api.com/v2/ranks>","required":false,"schema":{"type":["integer","null"],"format":"int32","maximum":116,"minimum":0}},{"name":"min_match_id","in":"query","description":"Filter matches based on their ID.","required":false,"schema":{"type":["integer","null"],"format":"int64","minimum":0}},{"name":"max_match_id","in":"query","description":"Filter matches based on their ID.","required":false,"schema":{"type":["integer","null"],"format":"int64","minimum":0}}],"responses":{"200":{"description":"Party Stats","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/PartyStats"}}}}},"400":{"description":"Provided parameters are invalid."},"500":{"description":"Failed to fetch party stats"}}}},"/v1/sql":{"get":{"tags":["SQL"],"summary":"Query","description":"\nExecutes a SQL query on the database.\n\n### Rate Limits:\n| Type | Limit |\n| ---- | ----- |\n| IP | 300req/5min |\n| Key | 300req/5min |\n| Global | 600req/60s |\n    ","operationId":"sql","parameters":[{"name":"query","in":"query","description":"The SQL query to execute. It must follow the Clickhouse SQL syntax.","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"text/plain":{"schema":{"type":"string"}}}},"500":{"description":"","content":{"text/plain":{"schema":{"type":"string"}}}}}}},"/v1/sql/tables":{"get":{"tags":["SQL"],"summary":"List Tables","description":"\nLists all tables in the database.\n\n### Rate Limits:\n| Type | Limit |\n| ---- | ----- |\n| IP | 100req/s |\n| Key | - |\n| Global | - |\n    ","operationId":"list_tables","responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"array","items":{"type":"string"}}}}},"500":{"description":"","content":{"text/plain":{"schema":{"type":"string"}}}}}}},"/v1/sql/tables/{table}/schema":{"get":{"tags":["SQL"],"summary":"Table Schema","description":"\nReturns the schema of a table.\n\n### Rate Limits:\n| Type | Limit |\n| ---- | ----- |\n| IP | 100req/s |\n| Key | - |\n| Global | - |\n    ","operationId":"table_schema","parameters":[{"name":"table","in":"path","description":"The name of the table to fetch the schema for.","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"object","additionalProperties":{"type":"string"},"propertyNames":{"type":"string"}}}}},"500":{"description":"","content":{"text/plain":{"schema":{"type":"string"}}}}}}}},"components":{"schemas":{"APIInfo":{"type":"object","properties":{"fetched_matches_per_day":{"type":["integer","null"],"format":"int64","description":"The number of matches fetched in the last 24 hours.","minimum":0},"missed_matches":{"type":["integer","null"],"format":"int64","description":"The number of matches that have not been fetched.","minimum":0},"table_sizes":{"type":["object","null"],"description":"The sizes of all tables in the database.","additionalProperties":{"$ref":"#/components/schemas/TableSize"},"propertyNames":{"type":"string"}}}},"ActiveMatch":{"type":"object","required":["players"],"properties":{"compat_version":{"type":["integer","null"],"format":"int32","minimum":0},"duration_s":{"type":["integer","null"],"format":"int32","minimum":0},"game_mode":{"type":["integer","null"],"format":"int32"},"game_mode_parsed":{"oneOf":[{"type":"null"},{"$ref":"#/components/schemas/ActiveMatchGameMode"}]},"game_mode_version":{"type":["integer","null"],"format":"int32","minimum":0},"lobby_id":{"type":["integer","null"],"format":"int64","minimum":0},"match_id":{"type":["integer","null"],"format":"int64","minimum":0},"match_mode":{"type":["integer","null"],"format":"int32"},"match_mode_parsed":{"oneOf":[{"type":"null"},{"$ref":"#/components/schemas/ActiveMatchMode"}]},"match_score":{"type":["integer","null"],"format":"int32","minimum":0},"net_worth_team_0":{"type":["integer","null"],"format":"int32","minimum":0},"net_worth_team_1":{"type":["integer","null"],"format":"int32","minimum":0},"objectives_mask_team0":{"type":["integer","null"],"format":"int64","minimum":0},"objectives_mask_team1":{"type":["integer","null"],"format":"int64","minimum":0},"open_spectator_slots":{"type":["integer","null"],"format":"int32","minimum":0},"players":{"type":"array","items":{"$ref":"#/components/schemas/ActiveMatchPlayer"}},"region_mode":{"type":["integer","null"],"format":"int32"},"region_mode_parsed":{"oneOf":[{"type":"null"},{"$ref":"#/components/schemas/ActiveMatchRegionMode"}]},"spectators":{"type":["integer","null"],"format":"int32","minimum":0},"start_time":{"type":["integer","null"],"format":"int32","minimum":0},"winning_team":{"type":["integer","null"],"format":"int32"},"winning_team_parsed":{"oneOf":[{"type":"null"},{"$ref":"#/components/schemas/ActiveMatchTeam"}]}}},"ActiveMatchGameMode":{"type":"string","enum":["KECitadelGameModeInvalid","KECitadelGameModeNormal","KECitadelGameMode1v1Test","KECitadelGameModeSandbox"]},"ActiveMatchMode":{"type":"string","enum":["Invalid","Unranked","PrivateLobby","CoopBot","Ranked","ServerTest","Tutorial","HeroLabs"]},"ActiveMatchPlayer":{"type":"object","properties":{"abandoned":{"type":["boolean","null"]},"account_id":{"type":["integer","null"],"format":"int32","minimum":0},"hero_id":{"type":["integer","null"],"format":"int32","description":"See more: <https://assets.deadlock-api.com/v2/heroes>","minimum":0},"team":{"type":["integer","null"],"format":"int32"},"team_parsed":{"oneOf":[{"type":"null"},{"$ref":"#/components/schemas/ActiveMatchTeam"}]}}},"ActiveMatchRegionMode":{"type":"string","enum":["Row","Europe","SeAsia","SAmerica","Russia","Oceania"]},"ActiveMatchTeam":{"type":"string","enum":["Team0","Team1","Spectator"]},"AnalyticsAbilityOrderStats":{"type":"object","required":["abilities","wins","losses","matches","players","total_kills","total_deaths","total_assists"],"properties":{"abilities":{"type":"array","items":{"type":"integer","format":"int32","minimum":0},"description":"See more: <https://assets.deadlock-api.com/v2/heroes>"},"losses":{"type":"integer","format":"int64","minimum":0},"matches":{"type":"integer","format":"int64","minimum":0},"players":{"type":"integer","format":"int64","minimum":0},"total_assists":{"type":"integer","format":"int64","minimum":0},"total_deaths":{"type":"integer","format":"int64","minimum":0},"total_kills":{"type":"integer","format":"int64","minimum":0},"wins":{"type":"integer","format":"int64","minimum":0}}},"AnalyticsHeroStats":{"type":"object","required":["hero_id","wins","losses","matches","matches_per_bucket","players","total_kills","total_deaths","total_assists","total_net_worth","total_last_hits","total_denies","total_player_damage","total_player_damage_taken","total_boss_damage","total_creep_damage","total_neutral_damage","total_max_health","total_shots_hit","total_shots_missed"],"properties":{"bucket":{"type":["integer","null"],"format":"int32","minimum":0},"hero_id":{"type":"integer","format":"int32","description":"See more: <https://assets.deadlock-api.com/v2/heroes>","minimum":0},"losses":{"type":"integer","format":"int64","minimum":0},"matches":{"type":"integer","format":"int64","minimum":0},"matches_per_bucket":{"type":"integer","format":"int64","minimum":0},"players":{"type":"integer","format":"int64","minimum":0},"total_assists":{"type":"integer","format":"int64","minimum":0},"total_boss_damage":{"type":"integer","format":"int64","minimum":0},"total_creep_damage":{"type":"integer","format":"int64","minimum":0},"total_deaths":{"type":"integer","format":"int64","minimum":0},"total_denies":{"type":"integer","format":"int64","minimum":0},"total_kills":{"type":"integer","format":"int64","minimum":0},"total_last_hits":{"type":"integer","format":"int64","minimum":0},"total_max_health":{"type":"integer","format":"int64","minimum":0},"total_net_worth":{"type":"integer","format":"int64","minimum":0},"total_neutral_damage":{"type":"integer","format":"int64","minimum":0},"total_player_damage":{"type":"integer","format":"int64","minimum":0},"total_player_damage_taken":{"type":"integer","format":"int64","minimum":0},"total_shots_hit":{"type":"integer","format":"int64","minimum":0},"total_shots_missed":{"type":"integer","format":"int64","minimum":0},"wins":{"type":"integer","format":"int64","minimum":0}}},"BadgeDistribution":{"type":"object","required":["badge_level","total_matches"],"properties":{"badge_level":{"type":"integer","format":"int32","description":"The badge level. See more: <https://assets.deadlock-api.com/v2/ranks>","minimum":0},"total_matches":{"type":"integer","format":"int64","description":"The total number of matches.","minimum":0}}},"Build":{"type":"object","required":["hero_build"],"properties":{"hero_build":{"$ref":"#/components/schemas/BuildHero"},"num_favorites":{"type":["integer","null"],"format":"int32","minimum":0},"num_ignores":{"type":["integer","null"],"format":"int32","minimum":0},"num_reports":{"type":["integer","null"],"format":"int32","minimum":0},"num_weekly_favorites":{"type":["integer","null"],"format":"int32","minimum":0},"rollup_category":{"type":["integer","null"],"format":"int32","minimum":0}}},"BuildHero":{"type":"object","required":["hero_id","hero_build_id","author_account_id","name","language","version","origin_build_id","details"],"properties":{"author_account_id":{"type":"integer","format":"int32","minimum":0},"description":{"type":["string","null"]},"details":{"$ref":"#/components/schemas/BuildHeroDetails"},"development_build":{"type":["boolean","null"]},"hero_build_id":{"type":"integer","format":"int32","minimum":0},"hero_id":{"type":"integer","format":"int32","description":"See more: <https://assets.deadlock-api.com/v2/heroes>","minimum":0},"language":{"type":"integer","format":"int32","minimum":0},"last_updated_timestamp":{"type":["integer","null"],"format":"int64"},"name":{"type":"string"},"origin_build_id":{"type":"integer","format":"int32","minimum":0},"publish_timestamp":{"type":["integer","null"],"format":"int64"},"tags":{"type":"array","items":{"type":"integer","format":"int32","minimum":0}},"version":{"type":"integer","format":"int32","minimum":0}}},"BuildHeroDetails":{"type":"object","required":["mod_categories"],"properties":{"ability_order":{"oneOf":[{"type":"null"},{"$ref":"#/components/schemas/BuildHeroDetailsAbilityOrder"}]},"mod_categories":{"type":"array","items":{"$ref":"#/components/schemas/BuildHeroDetailsCategory"}}}},"BuildHeroDetailsAbilityOrder":{"type":"object","properties":{"currency_changes":{"type":["array","null"],"items":{"$ref":"#/components/schemas/BuildHeroDetailsAbilityOrderCurrencyChange"}}}},"BuildHeroDetailsAbilityOrderCurrencyChange":{"type":"object","required":["ability_id","currency_type","delta"],"properties":{"ability_id":{"type":"integer","format":"int32","minimum":0},"annotation":{"type":["string","null"]},"currency_type":{"type":"integer","format":"int32"},"delta":{"type":"integer","format":"int32"}}},"BuildHeroDetailsCategory":{"type":"object","required":["name"],"properties":{"description":{"type":["string","null"]},"height":{"type":["number","null"],"format":"float"},"mods":{"type":["array","null"],"items":{"$ref":"#/components/schemas/BuildHeroDetailsCategoryAbility"}},"name":{"type":"string"},"optional":{"type":["boolean","null"]},"width":{"type":["number","null"],"format":"float"}}},"BuildHeroDetailsCategoryAbility":{"type":"object","required":["ability_id"],"properties":{"ability_id":{"type":"integer","format":"int32","minimum":0},"annotation":{"type":["string","null"]},"imbue_target_ability_id":{"type":["integer","null"],"format":"int32","minimum":0},"required_flex_slots":{"type":["integer","null"],"format":"int32","minimum":0},"sell_priority":{"type":["integer","null"],"format":"int32","minimum":0}}},"BuildItemStats":{"type":"object","required":["item_id","builds"],"properties":{"builds":{"type":"integer","format":"int64"},"item_id":{"type":"integer","format":"int64","description":"See more: <https://assets.deadlock-api.com/v2/items>"}}},"ClickhouseMatchInfo":{"type":"object","required":["match_id","start_time","duration_s","match_mode"],"properties":{"average_badge_team0":{"type":["integer","null"],"format":"int32","description":"See more: <https://assets.deadlock-api.com/v2/ranks>","minimum":0},"average_badge_team1":{"type":["integer","null"],"format":"int32","description":"See more: <https://assets.deadlock-api.com/v2/ranks>","minimum":0},"duration_s":{"type":"integer","format":"int32","minimum":0},"match_id":{"type":"integer","format":"int64","minimum":0},"match_mode":{"type":"integer","format":"int32"},"start_time":{"type":"integer","format":"int32","minimum":0}}},"ClickhouseSalts":{"type":"object","required":["match_id"],"properties":{"cluster_id":{"type":["integer","null"],"format":"int32","minimum":0},"match_id":{"type":"integer","format":"int64","minimum":0},"metadata_salt":{"type":["integer","null"],"format":"int32","minimum":0},"replay_salt":{"type":["integer","null"],"format":"int32","minimum":0},"username":{"type":["string","null"]}}},"CreateCustomRequest":{"type":"object","properties":{"callback_url":{"type":["string","null"],"description":"If a callback url is provided, we will send a POST request to this url when the match starts."},"cheats_enabled":{"type":["boolean","null"]},"duplicate_heroes_enabled":{"type":["boolean","null"]},"experimental_heroes_enabled":{"type":["boolean","null"]},"is_publicly_visible":{"type":["boolean","null"]},"min_roster_size":{"type":["integer","null"],"format":"int32","minimum":0},"randomize_lanes":{"type":["boolean","null"]}}},"CreateCustomResponse":{"type":"object","required":["party_id","party_code"],"properties":{"callback_secret":{"type":["string","null"],"description":"If a callback url is provided, this is the secret that should be used to verify the callback.\nThe secret is a base64 encoded random string. To verify it you should compare it with the X-Callback-Secret header.\nIf no callback url is provided, this will be None."},"party_code":{"type":"string"},"party_id":{"type":"string"}}},"ESportsMatch":{"type":"object","required":["provider"],"properties":{"match_id":{"type":["integer","null"],"format":"int64","description":"Valve's match id of the match."},"provider":{"type":"string","description":"The provider of the match data. Some string that identifies the source of the data."},"scheduled_date":{"type":["string","null"],"format":"date-time","description":"The scheduled date of the match."},"status":{"oneOf":[{"type":"null"},{"$ref":"#/components/schemas/ESportsMatchStatus","description":"The status of the match, e.g. live, completed, scheduled, cancelled."}]},"team0_name":{"type":["string","null"],"description":"The name of the first team."},"team1_name":{"type":["string","null"],"description":"The name of the second team."},"tournament_name":{"type":["string","null"],"description":"The name of the tournament."},"tournament_stage":{"type":["string","null"],"description":"The stage of the tournament."},"update_id":{"type":["string","null"],"format":"uuid","description":"If you want to update an existing match, you can provide an update id."}}},"ESportsMatchStatus":{"type":"string","enum":["Live","Completed","Scheduled","Cancelled"]},"EnemyStats":{"type":"object","required":["enemy_id","wins","matches_played","matches"],"properties":{"enemy_id":{"type":"integer","format":"int32","minimum":0},"matches":{"type":"array","items":{"type":"integer","format":"int64","minimum":0}},"matches_played":{"type":"integer","format":"int64","minimum":0},"wins":{"type":"integer","format":"int64","description":"The amount of matches won against the enemy.","minimum":0}}},"Entry":{"type":"object","required":["rank","hero_id","value","matches"],"properties":{"hero_id":{"type":"integer","format":"int32","description":"See more: <https://assets.deadlock-api.com/v2/heroes>","minimum":0},"matches":{"type":"integer","format":"int64","minimum":0},"rank":{"type":"integer","format":"int64","description":"See more: <https://assets.deadlock-api.com/v2/ranks>","minimum":0},"value":{"type":"number","format":"double"}}},"GetCustomMatchIdResponse":{"type":"object","required":["match_id"],"properties":{"match_id":{"type":"integer","format":"int64","minimum":0}}},"HashMap":{"type":"object","additionalProperties":{"type":"object","required":["avg","std","percentile1","percentile5","percentile10","percentile25","percentile50","percentile75","percentile90","percentile95","percentile99"],"properties":{"avg":{"type":"number","format":"double"},"percentile1":{"type":"number","format":"double"},"percentile10":{"type":"number","format":"double"},"percentile25":{"type":"number","format":"double"},"percentile5":{"type":"number","format":"double"},"percentile50":{"type":"number","format":"double"},"percentile75":{"type":"number","format":"double"},"percentile90":{"type":"number","format":"double"},"percentile95":{"type":"number","format":"double"},"percentile99":{"type":"number","format":"double"},"std":{"type":"number","format":"double"}}},"propertyNames":{"type":"string","enum":["kills","deaths","assists","net_worth","net_worth_per_min","denies","last_hits","crit_shot_rate","accuracy","kd","kda","kills_plus_assists","player_damage","player_damage_per_health","player_damage_per_min","player_damage_taken_per_min","neutral_damage","neutral_damage_per_min","boss_damage","boss_damage_per_min","self_healing","player_healing","healing","self_healing_per_min","player_healing_per_min","healing_per_min"]}},"HeroCombStats":{"type":"object","required":["hero_ids","wins","losses","matches"],"properties":{"hero_ids":{"type":"array","items":{"type":"integer","format":"int32","minimum":0},"description":"See more: <https://assets.deadlock-api.com/v2/heroes>"},"losses":{"type":"integer","format":"int64","minimum":0},"matches":{"type":"integer","format":"int64","minimum":0},"wins":{"type":"integer","format":"int64","minimum":0}}},"HeroCounterStats":{"type":"object","required":["hero_id","enemy_hero_id","wins","matches_played","kills","enemy_kills","deaths","enemy_deaths","assists","enemy_assists","denies","enemy_denies","last_hits","enemy_last_hits","networth","enemy_networth","obj_damage","enemy_obj_damage","creeps","enemy_creeps"],"properties":{"assists":{"type":"integer","format":"int64","description":"The number of assists by `hero_id` when facing `enemy_hero_id`.","minimum":0},"creeps":{"type":"integer","format":"int64","description":"The number of creeps killed by `hero_id` when facing `enemy_hero_id`.","minimum":0},"deaths":{"type":"integer","format":"int64","description":"The number of deaths by `hero_id` when facing `enemy_hero_id`.","minimum":0},"denies":{"type":"integer","format":"int64","description":"The number of denies by `hero_id` when facing `enemy_hero_id`.","minimum":0},"enemy_assists":{"type":"integer","format":"int64","description":"The number of assists by `enemy_hero_id` when facing `hero_id`.","minimum":0},"enemy_creeps":{"type":"integer","format":"int64","description":"The number of creeps killed by `enemy_hero_id` when facing `hero_id`.","minimum":0},"enemy_deaths":{"type":"integer","format":"int64","description":"The number of deaths by `enemy_hero_id` when facing `hero_id`.","minimum":0},"enemy_denies":{"type":"integer","format":"int64","description":"The number of denies by `enemy_hero_id` when facing `hero_id`.","minimum":0},"enemy_hero_id":{"type":"integer","format":"int32","description":"The ID of the opposing hero. See more: <https://assets.deadlock-api.com/v2/heroes>","minimum":0},"enemy_kills":{"type":"integer","format":"int64","description":"The number of kills by `enemy_hero_id` when facing `hero_id`.","minimum":0},"enemy_last_hits":{"type":"integer","format":"int64","description":"The number of last hits by `enemy_hero_id` when facing `hero_id`.","minimum":0},"enemy_networth":{"type":"integer","format":"int64","description":"The net worth of `enemy_hero_id` when facing `hero_id`.","minimum":0},"enemy_obj_damage":{"type":"integer","format":"int64","description":"The amount of objective damage dealt by `enemy_hero_id` when facing `hero_id`.","minimum":0},"hero_id":{"type":"integer","format":"int32","description":"The ID of the hero. See more: <https://assets.deadlock-api.com/v2/heroes>","minimum":0},"kills":{"type":"integer","format":"int64","description":"The number of kills by `hero_id` when facing `enemy_hero_id`.","minimum":0},"last_hits":{"type":"integer","format":"int64","description":"The number of last hits by `hero_id` when facing `enemy_hero_id`.","minimum":0},"matches_played":{"type":"integer","format":"int64","description":"The total number of matches played between `hero_id` and `enemy_hero_id` that meet the filter criteria.","minimum":0},"networth":{"type":"integer","format":"int64","description":"The net worth of `hero_id` when facing `enemy_hero_id`.","minimum":0},"obj_damage":{"type":"integer","format":"int64","description":"The amount of objective damage dealt by `hero_id` when facing `enemy_hero_id`.","minimum":0},"wins":{"type":"integer","format":"int64","description":"The number of times `hero_id` won the match when facing `enemy_hero_id`.","minimum":0}}},"HeroStats":{"type":"object","required":["account_id","hero_id","matches_played","last_played","time_played","wins","ending_level","kills","deaths","assists","denies_per_match","kills_per_min","deaths_per_min","assists_per_min","denies_per_min","networth_per_min","last_hits_per_min","damage_per_min","damage_per_soul","damage_mitigated_per_min","damage_taken_per_min","damage_taken_per_soul","creeps_per_min","obj_damage_per_min","obj_damage_per_soul","accuracy","crit_shot_rate","matches"],"properties":{"account_id":{"type":"integer","format":"int32","minimum":0},"accuracy":{"type":"number","format":"double"},"assists":{"type":"integer","format":"int64","minimum":0},"assists_per_min":{"type":"number","format":"double"},"creeps_per_min":{"type":"number","format":"double"},"crit_shot_rate":{"type":"number","format":"double"},"damage_mitigated_per_min":{"type":"number","format":"double","deprecated":true},"damage_per_min":{"type":"number","format":"double"},"damage_per_soul":{"type":"number","format":"double"},"damage_taken_per_min":{"type":"number","format":"double"},"damage_taken_per_soul":{"type":"number","format":"double"},"deaths":{"type":"integer","format":"int64","minimum":0},"deaths_per_min":{"type":"number","format":"double"},"denies_per_match":{"type":"number","format":"double"},"denies_per_min":{"type":"number","format":"double"},"ending_level":{"type":"number","format":"double"},"hero_id":{"type":"integer","format":"int32","description":"See more: <https://assets.deadlock-api.com/v2/heroes>","minimum":0},"kills":{"type":"integer","format":"int64","minimum":0},"kills_per_min":{"type":"number","format":"double"},"last_hits_per_min":{"type":"number","format":"double"},"last_played":{"type":"integer","format":"int32","minimum":0},"matches":{"type":"array","items":{"type":"integer","format":"int64","minimum":0}},"matches_played":{"type":"integer","format":"int64","minimum":0},"networth_per_min":{"type":"number","format":"double"},"obj_damage_per_min":{"type":"number","format":"double"},"obj_damage_per_soul":{"type":"number","format":"double"},"time_played":{"type":"integer","format":"int64","minimum":0},"wins":{"type":"integer","format":"int64","minimum":0}}},"HeroSynergyStats":{"type":"object","required":["hero_id1","hero_id2","wins","matches_played","kills1","kills2","deaths1","deaths2","assists1","assists2","denies1","denies2","last_hits1","last_hits2","networth1","networth2","obj_damage1","obj_damage2","creeps1","creeps2"],"properties":{"assists1":{"type":"integer","format":"int64","description":"The number of assists by `hero_id1` when playing with `hero_id2`.","minimum":0},"assists2":{"type":"integer","format":"int64","description":"The number of assists by `hero_id2` when playing with `hero_id1`.","minimum":0},"creeps1":{"type":"integer","format":"int64","description":"The number of creeps killed by `hero_id1` when playing with `hero_id2`.","minimum":0},"creeps2":{"type":"integer","format":"int64","description":"The number of creeps killed by `hero_id2` when playing with `hero_id1`.","minimum":0},"deaths1":{"type":"integer","format":"int64","description":"The number of deaths by `hero_id1` when playing with `hero_id2`.","minimum":0},"deaths2":{"type":"integer","format":"int64","description":"The number of deaths by `hero_id2` when playing with `hero_id1`.","minimum":0},"denies1":{"type":"integer","format":"int64","description":"The number of denies by `hero_id1` when playing with `hero_id2`.","minimum":0},"denies2":{"type":"integer","format":"int64","description":"The number of denies by `hero_id2` when playing with `hero_id1`.","minimum":0},"hero_id1":{"type":"integer","format":"int32","description":"The ID of the first hero in the pair.","minimum":0},"hero_id2":{"type":"integer","format":"int32","description":"The ID of the second hero in the pair.","minimum":0},"kills1":{"type":"integer","format":"int64","description":"The number of kills by `hero_id1` when playing with `hero_id2`.","minimum":0},"kills2":{"type":"integer","format":"int64","description":"The number of kills by `hero_id2` when playing with `hero_id1`.","minimum":0},"last_hits1":{"type":"integer","format":"int64","description":"The number of last hits by `hero_id1` when playing with `hero_id2`.","minimum":0},"last_hits2":{"type":"integer","format":"int64","description":"The number of last hits by `hero_id2` when playing with `hero_id1`.","minimum":0},"matches_played":{"type":"integer","format":"int64","description":"The total number of matches played where `hero_id1` and `hero_id2` were on the same team, meeting the filter criteria.","minimum":0},"networth1":{"type":"integer","format":"int64","description":"The net worth of `hero_id1` when playing with `hero_id2`.","minimum":0},"networth2":{"type":"integer","format":"int64","description":"The net worth of `hero_id2` when playing with `hero_id1`.","minimum":0},"obj_damage1":{"type":"integer","format":"int64","description":"The amount of objective damage dealt by `hero_id1` when playing with `hero_id2`.","minimum":0},"obj_damage2":{"type":"integer","format":"int64","description":"The amount of objective damage dealt by `hero_id2` when playing with `hero_id1`.","minimum":0},"wins":{"type":"integer","format":"int64","description":"The number of times the team won when both `hero_id1` and `hero_id2` were on the same team.","minimum":0}}},"ItemPermutationStats":{"type":"object","required":["item_ids","wins","losses","matches"],"properties":{"item_ids":{"type":"array","items":{"type":"integer","format":"int32","minimum":0},"description":"See more: <https://assets.deadlock-api.com/v2/items>"},"losses":{"type":"integer","format":"int64","minimum":0},"matches":{"type":"integer","format":"int64","minimum":0},"wins":{"type":"integer","format":"int64","minimum":0}}},"ItemStats":{"type":"object","required":["item_id","wins","losses","matches","players"],"properties":{"bucket":{"type":["integer","null"],"format":"int32","minimum":0},"item_id":{"type":"integer","format":"int32","description":"See more: <https://assets.deadlock-api.com/v2/items>","minimum":0},"losses":{"type":"integer","format":"int64","minimum":0},"matches":{"type":"integer","format":"int64","minimum":0},"players":{"type":"integer","format":"int64","minimum":0},"wins":{"type":"integer","format":"int64","minimum":0}}},"Leaderboard":{"type":"object","required":["entries"],"properties":{"entries":{"type":"array","items":{"$ref":"#/components/schemas/LeaderboardEntry"},"description":"The leaderboard entries."}}},"LeaderboardEntry":{"type":"object","properties":{"account_name":{"type":["string","null"],"description":"The account name of the player."},"badge_level":{"type":["integer","null"],"format":"int32","description":"The badge level of the player. See more: <https://assets.deadlock-api.com/v2/ranks>","minimum":0},"possible_account_ids":{"type":"array","items":{"type":"integer","format":"int32","minimum":0},"description":"The possible account IDs of the player. **CAVEAT: This is not always correct, as Steam account names are not unique.**"},"rank":{"type":["integer","null"],"format":"int32","description":"The rank of the player. See more: <https://assets.deadlock-api.com/v2/ranks>","minimum":0},"ranked_rank":{"type":["integer","null"],"format":"int32","description":"The ranked rank of the player. See more: <https://assets.deadlock-api.com/v2/ranks>","minimum":0},"ranked_subrank":{"type":["integer","null"],"format":"int32","description":"The ranked subrank of the player. See more: <https://assets.deadlock-api.com/v2/ranks>","minimum":0},"top_hero_ids":{"type":"array","items":{"type":"integer","format":"int32","minimum":0},"description":"The top hero IDs of the player. See more: <https://assets.deadlock-api.com/v2/heroes>"}}},"MMRHistory":{"type":"object","required":["account_id","match_id","start_time","player_score","rank","division","division_tier"],"properties":{"account_id":{"type":"integer","format":"int32","minimum":0},"division":{"type":"integer","format":"int32","description":"Extracted from the rank the division (rank // 10)","minimum":0},"division_tier":{"type":"integer","format":"int32","description":"Extracted from the rank the division tier (rank % 10)","minimum":0},"match_id":{"type":"integer","format":"int64","minimum":0},"player_score":{"type":"number","format":"double","description":"Player Score is the index for the rank array (internally used for the rank regression)"},"rank":{"type":"integer","format":"int32","description":"The Player Rank. See more: <https://assets.deadlock-api.com/v2/ranks>","minimum":0},"start_time":{"type":"integer","format":"int32","description":"Start time of the match","minimum":0}}},"MatchSaltsResponse":{"type":"object","required":["match_id"],"properties":{"cluster_id":{"type":["integer","null"],"format":"int32","minimum":0},"demo_url":{"type":["string","null"]},"match_id":{"type":"integer","format":"int64","minimum":0},"metadata_salt":{"type":["integer","null"],"format":"int32","minimum":0},"metadata_url":{"type":["string","null"]},"replay_salt":{"type":["integer","null"],"format":"int32","minimum":0}}},"MatchSpectateResponse":{"type":"object","required":["broadcast_url"],"properties":{"broadcast_url":{"type":"string"},"lobby_id":{"type":["integer","null"],"format":"int64","minimum":0}}},"MateStats":{"type":"object","required":["mate_id","wins","matches_played","matches"],"properties":{"matches":{"type":"array","items":{"type":"integer","format":"int64","minimum":0}},"matches_played":{"type":"integer","format":"int64","minimum":0},"mate_id":{"type":"integer","format":"int32","minimum":0},"wins":{"type":"integer","format":"int64","minimum":0}}},"PartyStats":{"type":"object","required":["party_size","wins","matches_played","matches"],"properties":{"matches":{"type":"array","items":{"type":"integer","format":"int64","minimum":0}},"matches_played":{"type":"integer","format":"int64","minimum":0},"party_size":{"type":"integer","format":"int64","minimum":0},"wins":{"type":"integer","format":"int64","minimum":0}}},"Patch":{"type":"object","required":["title","pub_date","link","guid","author","category","dc_creator","content_encoded","slash_comments"],"properties":{"author":{"type":"string"},"category":{"$ref":"#/components/schemas/PatchCategory"},"content_encoded":{"type":"string"},"dc_creator":{"type":"string"},"guid":{"$ref":"#/components/schemas/PatchGuid"},"link":{"type":"string"},"pub_date":{"type":"string","format":"date-time"},"slash_comments":{"type":"string"},"title":{"type":"string"}}},"PatchCategory":{"type":"object","required":["domain","text"],"properties":{"domain":{"type":"string"},"text":{"type":"string"}}},"PatchGuid":{"type":"object","required":["is_perma_link","text"],"properties":{"is_perma_link":{"type":"boolean"},"text":{"type":"string"}}},"PlayerCard":{"type":"object","required":["account_id","slots"],"properties":{"account_id":{"type":"integer","format":"int32","minimum":0},"ranked_badge_level":{"type":["integer","null"],"format":"int32","description":"See more: <https://assets.deadlock-api.com/v2/ranks>","minimum":0},"ranked_rank":{"type":["integer","null"],"format":"int32","description":"See more: <https://assets.deadlock-api.com/v2/ranks>","minimum":0},"ranked_subrank":{"type":["integer","null"],"format":"int32","description":"See more: <https://assets.deadlock-api.com/v2/ranks>","minimum":0},"slots":{"type":"array","items":{"$ref":"#/components/schemas/PlayerCardSlot"}}}},"PlayerCardSlot":{"type":"object","properties":{"hero":{"oneOf":[{"type":"null"},{"$ref":"#/components/schemas/PlayerCardSlotHero"}]},"slot_id":{"type":["integer","null"],"format":"int32","minimum":0},"stat":{"oneOf":[{"type":"null"},{"$ref":"#/components/schemas/PlayerCardSlotStat"}]}}},"PlayerCardSlotHero":{"type":"object","properties":{"id":{"type":["integer","null"],"format":"int32","description":"See more: <https://assets.deadlock-api.com/v2/heroes>","minimum":0},"kills":{"type":["integer","null"],"format":"int32","minimum":0},"wins":{"type":["integer","null"],"format":"int32","minimum":0}}},"PlayerCardSlotStat":{"type":"object","properties":{"stat_id":{"type":["integer","null"],"format":"int32"},"stat_score":{"type":["integer","null"],"format":"int32","minimum":0}}},"PlayerMatchHistoryEntry":{"type":"object","required":["account_id","match_id","hero_id","hero_level","start_time","game_mode","match_mode","player_team","player_kills","player_deaths","player_assists","denies","net_worth","last_hits","match_duration_s","match_result","objectives_mask_team0","objectives_mask_team1"],"properties":{"abandoned_time_s":{"type":["integer","null"],"format":"int32","minimum":0},"account_id":{"type":"integer","format":"int32","minimum":0},"denies":{"type":"integer","format":"int32","minimum":0},"game_mode":{"type":"integer","format":"int32"},"hero_id":{"type":"integer","format":"int32","description":"See more: <https://assets.deadlock-api.com/v2/heroes>","minimum":0},"hero_level":{"type":"integer","format":"int32","minimum":0},"last_hits":{"type":"integer","format":"int32","minimum":0},"match_duration_s":{"type":"integer","format":"int32","minimum":0},"match_id":{"type":"integer","format":"int64","minimum":0},"match_mode":{"type":"integer","format":"int32"},"match_result":{"type":"integer","format":"int32","minimum":0},"net_worth":{"type":"integer","format":"int32","minimum":0},"objectives_mask_team0":{"type":"integer","format":"int32","minimum":0},"objectives_mask_team1":{"type":"integer","format":"int32","minimum":0},"player_assists":{"type":"integer","format":"int32","minimum":0},"player_deaths":{"type":"integer","format":"int32","minimum":0},"player_kills":{"type":"integer","format":"int32","minimum":0},"player_team":{"type":"integer","format":"int32"},"start_time":{"type":"integer","format":"int32","minimum":0},"team_abandoned":{"type":["boolean","null"]}}},"Status":{"type":"object","required":["services"],"properties":{"services":{"$ref":"#/components/schemas/StatusServices","description":"Status of the services."}}},"StatusServices":{"type":"object","required":["clickhouse","postgres","redis"],"properties":{"clickhouse":{"type":"boolean","description":"Whether Clickhouse is reachable."},"postgres":{"type":"boolean","description":"Whether Postgres is reachable."},"redis":{"type":"boolean","description":"Whether Redis is reachable."}}},"SteamProfile":{"type":"object","required":["account_id","personaname","profileurl","avatar","avatarmedium","avatarfull","last_updated"],"properties":{"account_id":{"type":"integer","format":"int32","minimum":0},"avatar":{"type":"string"},"avatarfull":{"type":"string"},"avatarmedium":{"type":"string"},"countrycode":{"type":["string","null"]},"last_updated":{"type":"string","format":"date-time"},"personaname":{"type":"string"},"profileurl":{"type":"string"},"realname":{"type":["string","null"]}}},"TableSize":{"type":"object","required":["is_view"],"properties":{"data_compressed_bytes":{"type":["integer","null"],"format":"int64","description":"Compressed size of the table in bytes.","minimum":0},"data_uncompressed_bytes":{"type":["integer","null"],"format":"int64","description":"Uncompressed size of the table in bytes.","minimum":0},"is_view":{"type":"boolean","description":"Whether the table is a view."},"rows":{"type":["integer","null"],"format":"int64","description":"Number of rows in the table.","minimum":0}}},"VariableCategory":{"type":"string","enum":["General","Daily","Hero","Item","Leaderboard","Overall"]},"VariableDescription":{"type":"object","required":["name","description","extra_args","category"],"properties":{"category":{"$ref":"#/components/schemas/VariableCategory","description":"The category of the variable."},"default_label":{"type":["string","null"],"description":"The default label for the variable."},"description":{"type":"string","description":"The description of the variable."},"extra_args":{"type":"array","items":{"type":"string"},"description":"Extra arguments that can be passed to the variable."},"name":{"type":"string","description":"The name of the variable."}}}},"securitySchemes":{"api_key_header":{"type":"apiKey","in":"header","name":"X-API-KEY"},"api_key_query":{"type":"apiKey","in":"query","name":"api_key"}}},"tags":[{"name":"Matches","description":"\nComprehensive match data endpoints for retrieving detailed information about games.\nProvides access to active matches, match metadata, replay salts, and more.\n"},{"name":"Custom Matches","description":"Custom Match related endpoints"},{"name":"Players","description":"Player related endpoints"},{"name":"MMR","description":"\n# STOP! READ THIS FIRST!\n\nPlease be very careful when using this endpoint and make yourself familiar with the way we calculate the MMR.\n\nThis is how we calculate a player MMR.\n\n1. We take the average badge of the team the player was on in a match.\n2. We convert the badge to a MMR score using the formula: `(intDiv(badge, 10) - 1) * 6 + (badge % 10)`\n3. We do a exponential moving average (EMA) of the last 50 matches to get the player's MMR score.\n4. We convert the MMR score back to a badge using the formula: `10 * intDiv(mmr_score, 6) + 1 + mmr_score % 6`\n\n### Rate Limits:\n| Type | Limit |\n| ---- | ----- |\n| IP | 100req/s |\n| Key | - |\n| Global | - |\n    "},{"name":"Steam","description":"Steam related endpoints"},{"name":"Leaderboard","description":"\nEndpoints for retrieving global and hero-specific leaderboards.\nSupports filtering by region and provides data in both JSON and protobuf formats.\n"},{"name":"Analytics","description":"\nComprehensive game statistics and analysis endpoints.\nProvides detailed performance metrics for heroes, items, and players, including hero synergies, counters, and combinations.\nFeatures scoreboards for both heroes and players.\n"},{"name":"Builds","description":"\nSearch and retrieve hero builds with comprehensive filtering options.\n"},{"name":"Patches","description":"Endpoints that return data about game patches."},{"name":"Commands","description":"\nIntegration endpoints for the [Deadlock Streamkit](https://streamkit.deadlock-api.com/).\nProvides functionality to resolve dynamic command templates and variables for streaming overlays and chat commands.\nIncludes endpoints to retrieve available variables, resolve specific variables or command templates, and get widget version information.\n"},{"name":"Info","description":"\nSystem status and info endpoints.\nProvides health checks for monitoring service availability (Clickhouse, Postgres, Redis) and API statistics including database table sizes, match fetching rates, and missed matches.\n"},{"name":"E-Sports"},{"name":"SQL","description":"\nDatabase exploration endpoints for direct SQL access.\nProvides functionality to execute custom SQL queries with rate limiting protection, list available tables, and inspect table schemas.\n"}],"externalDocs":{"url":"https://github.com/deadlock-api/deadlock-api-rust","description":"Source Code"}}